openapi: 3.0.1
info:
  title: Evidence Verification API
  version: 1.0.0
  extensions: {x-ibm-name: evidence-verification-api}
servers:
- {url: 'https://$(catalog.host)/@APIC_PATH@/v1'}
security:
- clientId: []
  clientSecret: []
paths:
  /healthz:
    get:
      tags: [Health]
      summary: Health API
      operationId: getHealth
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                example: {status: UP}
                exampleSetFlag: true
                types: [object]
                jsonSchema:
                  type: object
                  example: {status: UP}
              exampleSetFlag: false
          extensions: {}
        '500':
          description: Internal Server Error
          content: {}
          extensions: {}
      security: []
      extensions: {}
    extensions: {}
  /verifications:
    post:
      tags: [Verification]
      summary: Create a verification check, which returns a list of evidence requirements
        based on the provided loan application details
      operationId: createVerification
      parameters:
      - name: x-correlation-id
        in: header
        required: true
        schema:
          type: string
          extensions: {}
          exampleSetFlag: false
          types: [string]
        extensions: {}
      - name: x-client-channel
        in: header
        required: true
        schema:
          type: string
          extensions: {}
          exampleSetFlag: false
          types: [string]
        extensions: {}
      - name: x-client-reference
        in: header
        required: true
        schema:
          type: string
          extensions: {}
          exampleSetFlag: false
          types: [string]
        extensions: {}
      requestBody:
        content:
          application/json:
            schema: {$ref: '#/components/schemas/CreatableVerification', exampleSetFlag: false}
            exampleSetFlag: false
        required: true
        extensions: {}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: {$ref: '#/components/schemas/Verification', exampleSetFlag: false}
              exampleSetFlag: false
          extensions: {}
        '400':
          description: Bad Request
          content: {}
          extensions: {}
        '401':
          description: Unauthorized
          content: {}
          extensions: {}
        '406':
          description: Not Acceptable
          content: {}
          extensions: {}
        '500':
          description: Internal Server Error
          content: {}
          extensions: {}
      extensions: {x-codegen-request-body-name: body}
    extensions: {}
components:
  schemas:
    Application:
      additionalProperties: false
      description: The set of borrower- and broker-provided data for a single loan
        application.
      properties:
        '@ProductionData': {$ref: '#/components/schemas/yesNoList', description: Indicates
            whether this file contains production or test data.}
        '@UniqueID': {$ref: '#/components/schemas/uniqueIDType', description: System
            assigned unique identifier.}
        AccountVariation:
          description: A request to vary an existing loan account. More than one request
            can be made on a single account, such as increase limit and add security.
            Not all requests are compatible, for instance increase limit and decrease
            limit.
          items: {$ref: '#/components/schemas/AccountVariation'}
          minItems: 0
          type: array
        Address:
          description: Any real or postal address, used by reference
          items: {$ref: '#/components/schemas/addressType'}
          minItems: 0
          type: array
        ContributionFunds:
          description: Details the amounts and sources of funds that will be contributed
            by the applicant to complete the contemplated transaction, generally a
            property purchase but may also be a refinance or other purchase. There
            may be 0 or more contributions.
          items: {$ref: '#/components/schemas/ContributionFunds'}
          minItems: 0
          type: array
        DetailedComment:
          description: Complex element containing comments related to any section
            of the application. By default, absent any reference to a Context, comments
            relate to the Application overall.
          items: {$ref: '#/components/schemas/DetailedComment'}
          minItems: 0
          type: array
        Household:
          description: A household to which one or more person applicants belong,
            used in relation to the calculation of household living expenses
          items: {$ref: '#/components/schemas/Household'}
          minItems: 0
          type: array
        Insurance:
          description: Central insurance element capturing insurance details.
          items: {$ref: '#/components/schemas/Insurance'}
          minItems: 0
          type: array
        Liability:
          description: A liability item is a debt owed to a creditor or lender - such
            as a loan, line of credit, or tax bill.
          items: {$ref: '#/components/schemas/Liability'}
          minItems: 0
          type: array
        LoanDetails:
          description: 'Information about an individual credit facility that is being
            applied for including but not limited to: term loans; revolving credit
            facilities; overdrafts; credit cards; equipment finance; commercial bills;
            margin loans; personal loans; and reverse mortgages.'
          items: {$ref: '#/components/schemas/LoanDetails'}
          minItems: 0
          type: array
        NonRealEstateAsset:
          description: Contains details about an asset item that is not real estate,
            such as a term deposit account.
          items: {$ref: '#/components/schemas/NonRealEstateAsset'}
          minItems: 0
          type: array
        OtherIncome:
          description: Captures information about income earned by the applicants
            that is not captured under the Employment element for Person Applicants
            or Income elements for Company and Trust Applicants
          items: {$ref: '#/components/schemas/OtherIncome'}
          minItems: 0
          type: array
        Overview: {$ref: '#/components/schemas/Overview'}
        PersonApplicant:
          description: Contains applicant details where the applicant is a person,
            being either a borrower or a guarantor, and may be acting for a Trust.
          items: {$ref: '#/components/schemas/PersonApplicant'}
          minItems: 0
          type: array
        RealEstateAsset:
          description: Contains information about an asset which is real property.
          items: {$ref: '#/components/schemas/RealEstateAsset'}
          minItems: 0
          type: array
        RelatedCompany:
          description: A business enterprise (including company, sole trader, partnership
            or government department) that is not an applicant but has a role in some
            aspect of the application.
          items: {$ref: '#/components/schemas/RelatedCompany'}
          minItems: 0
          type: array
        RelatedPerson:
          description: A person that is not an applicant but has a role in some aspect
            of the application.
          items: {$ref: '#/components/schemas/RelatedPerson'}
          minItems: 0
          type: array
        SalesChannel: {$ref: '#/components/schemas/SalesChannel'}
        Summary: {$ref: '#/components/schemas/Summary'}
      required: ['@ProductionData', '@UniqueID']
      type: object
    CreatableVerification:
      required: [Application]
      type: object
      properties:
        Application:
          $ref: '#/components/schemas/Application'
          extensions: {}
          exampleSetFlag: false
      description: Request to create a verification checklist.
      exampleSetFlag: false
      types: [object]
      jsonSchema:
        type: object
        required: [Application]
        properties:
          Application: {originalRef: '#/components/schemas/Application', $ref: '#/components/schemas/Application'}
        description: Request to create a verification checklist.
    Verification:
      type: object
      properties:
        Options:
          type: array
          extensions: {}
          exampleSetFlag: false
          items:
            $ref: '#/components/schemas/VerificationOption'
            extensions: {}
            exampleSetFlag: false
          types: [array]
      description: Verification checklist for a loan application.
      exampleSetFlag: false
      types: [object]
      jsonSchema:
        type: object
        properties:
          Options:
            type: array
            items: {originalRef: '#/components/schemas/VerificationOption', $ref: '#/components/schemas/VerificationOption'}
        description: Verification checklist for a loan application.
    VerificationEvidence:
      type: object
      properties:
        Id:
          type: string
          description: Verification evidence id.
          example: '100'
          extensions: {}
          exampleSetFlag: true
          types: [string]
        Name:
          type: string
          description: Verification evidence name
          example: 2 Months BEN Group Account Statements
          extensions: {}
          exampleSetFlag: true
          types: [string]
        Type:
          type: string
          description: Verification evidence type
          example: Account Statement
          extensions: {}
          exampleSetFlag: true
          types: [string]
        PolicyReference:
          type: string
          description: Reference to the policy this evidence verification originates
            from
          example: 6.31.5.1.  PAYG (Permanent employment)
          extensions: {}
          exampleSetFlag: true
          types: [string]
        PolicyReferenceUri:
          type: string
          description: Reference URI to the policy this evidence verification originates
            from
          example: http://portal.bbl.int/icentral/Manuals/index.aspx?subTopic=4526#15878
          extensions: {}
          exampleSetFlag: true
          types: [string]
        Requirements:
          type: array
          extensions: {}
          exampleSetFlag: false
          items:
            $ref: '#/components/schemas/VerificationRequirement'
            extensions: {}
            exampleSetFlag: false
          types: [array]
        Fields:
          type: array
          extensions: {}
          exampleSetFlag: false
          items:
            $ref: '#/components/schemas/VerificationField'
            extensions: {}
            exampleSetFlag: false
          types: [array]
      description: Required evidence for a verification.
      exampleSetFlag: false
      types: [object]
      jsonSchema:
        type: object
        properties:
          Id: {type: string, example: '100', description: Verification evidence id.}
          Name: {type: string, example: 2 Months BEN Group Account Statements, description: Verification
              evidence name}
          Type: {type: string, example: Account Statement, description: Verification
              evidence type}
          PolicyReference: {type: string, example: 6.31.5.1.  PAYG (Permanent employment),
            description: Reference to the policy this evidence verification originates
              from}
          PolicyReferenceUri: {type: string, example: 'http://portal.bbl.int/icentral/Manuals/index.aspx?subTopic=4526#15878',
            description: Reference URI to the policy this evidence verification originates
              from}
          Requirements:
            type: array
            items: {originalRef: '#/components/schemas/VerificationRequirement', $ref: '#/components/schemas/VerificationRequirement'}
          Fields:
            type: array
            items: {originalRef: '#/components/schemas/VerificationField', $ref: '#/components/schemas/VerificationField'}
        description: Required evidence for a verification.
    VerificationField:
      type: object
      properties:
        Id:
          type: string
          description: Verification field id.
          example: '151'
          extensions: {}
          exampleSetFlag: true
          types: [string]
        Name:
          type: string
          description: Verification field name.
          example: Income
          extensions: {}
          exampleSetFlag: true
          types: [string]
      description: Verification field associated with an evidence.
      exampleSetFlag: false
      types: [object]
      jsonSchema:
        type: object
        properties:
          Id: {type: string, example: '151', description: Verification field id.}
          Name: {type: string, example: Income, description: Verification field name.}
        description: Verification field associated with an evidence.
    VerificationOption:
      type: object
      properties:
        ApplicantUniqueId:
          type: string
          description: System assigned unique identifier
          example: APPLICANT_ID_001
          extensions: {}
          exampleSetFlag: true
          types: [string]
        Category:
          $ref: '#/components/schemas/VerificationCategory'
          extensions: {}
          exampleSetFlag: false
        Type:
          $ref: '#/components/schemas/VerificationPurpose'
          extensions: {}
          exampleSetFlag: false
        EntityUniqueId:
          type: string
          description: System assigned unique identifier
          example: PAYG_ID_001
          extensions: {}
          exampleSetFlag: true
          types: [string]
        Number:
          type: integer
          description: Verification option number
          example: 1
          extensions: {}
          exampleSetFlag: true
          types: [integer]
        Evidences:
          type: array
          extensions: {}
          exampleSetFlag: false
          items:
            $ref: '#/components/schemas/VerificationEvidence'
            extensions: {}
            exampleSetFlag: false
          types: [array]
      description: Verification option details.
      exampleSetFlag: false
      types: [object]
      jsonSchema:
        type: object
        properties:
          ApplicantUniqueId: {type: string, example: APPLICANT_ID_001, description: System
              assigned unique identifier}
          Category: {originalRef: '#/components/schemas/VerificationCategory', $ref: '#/components/schemas/VerificationCategory'}
          Type: {originalRef: '#/components/schemas/VerificationPurpose', $ref: '#/components/schemas/VerificationPurpose'}
          EntityUniqueId: {type: string, example: PAYG_ID_001, description: System
              assigned unique identifier}
          Number: {type: integer, example: 1, description: Verification option number}
          Evidences:
            type: array
            items: {originalRef: '#/components/schemas/VerificationEvidence', $ref: '#/components/schemas/VerificationEvidence'}
        description: Verification option details.
    VerificationCategory:
      type: string
      example: Income
      exampleSetFlag: true
      types: [string]
      enum: [Income, Expense, Liability]
    VerificationRequirement:
      type: object
      properties:
        Id:
          type: string
          description: Verification requirement id.
          example: '101'
          extensions: {}
          exampleSetFlag: true
          types: [string]
        Condition:
          type: string
          description: Verification requirement condition.
          example: confirm regular (at least 2 months) salary credits
          extensions: {}
          exampleSetFlag: true
          types: [string]
      description: Verification requirement, which can be satisfied by an evidence.
      exampleSetFlag: false
      types: [object]
      jsonSchema:
        type: object
        properties:
          Id: {type: string, example: '101', description: Verification requirement
              id.}
          Condition: {type: string, example: confirm regular (at least 2 months) salary
              credits, description: Verification requirement condition.}
        description: Verification requirement, which can be satisfied by an evidence.
    VerificationPurpose:
      type: string
      description: The type of verification option.
      example: Regular Overtime
      exampleSetFlag: true
      types: [string]
      enum: [Regular Overtime, Regular Bonus, Regular Commission, Car Allowance, PAYG
          â€“ Gross Salaries, Employment Status, Employer, Government Benefits - Austudy,
        Government Benefits - Disability Support Pension, Government Benefits - Family
          Allowance, Government Benefits - Age Pension, Government Benefits - Carer
          Payment, Government Benefits - Veteran Pension, Government Benefits - Other,
        Dividends, Interest Income, Annuities, Managed Investment, Superannuation
          Income, Private Pension, Residential Rental Income, Commercial Rental Income,
        Living Expenses]
    PackageSummary:
      additionalProperties: true
      description: 'The root element that contains a message for exchange between
        two end-points involved in the workflow related to the processing of an application
        for a new financial product or change management of an existing financial
        product. The message contains instructions to the recipient requesting some
        workflow activity along with data related to: the applicant and the financial
        product involved; the publisher; one or more recipients; schema version information;
        and any related attachments.'
      properties:
        '@ProductionData': {$ref: '#/components/schemas/yesNoList', description: Indicates
            whether this file contains production or test data.}
        '@UniqueID': {$ref: '#/components/schemas/uniqueIDType', description: System
            assigned unique identifier}
        Content: {$ref: '#/components/schemas/ContentSummary'}
        Instructions: {$ref: '#/components/schemas/Instructions'}
        Publisher: {$ref: '#/components/schemas/Publisher'}
        Recipient:
          description: The intended recipients (company or company-specified routing)
            for the Package from the Publisher.
          items: {$ref: '#/components/schemas/Recipient'}
          minItems: 1
          type: array
        SchemaVersion: {$ref: '#/components/schemas/SchemaVersion'}
      required: [Instructions, Publisher, Recipient, SchemaVersion]
      type: object
    LIXICustomVersion:
      description: 'Each LIXI Schema that is customised by restriction is allocated
        a Custom Version Identifier. If the XML instance is created from a LIXI Transaction
        Schema the LIXICustomVersion is optional and should remain empty. If the XML
        instance is created from a schema that has been Customised by Restriction,
        this attribute is mandatory and holds the composite identifier constructed
        from: the LIXI Code of the author organisation; the Customisation Code (jointly
        defined by LIXI and the customisation author); and the datetimestamp of when
        the Customised Schema was created.'
      enum: [LIXI-CAL-2_6_41-BEN-SUMMARY-Annotated]
      type: string
    LIXITransactionType:
      description: Identifies the transaction type of the schema, for example CAL
        (for a Credit Application) or DAS (for Documents Preparation and Settlement).
      enum: [CAL]
      type: string
    LIXIVersion:
      description: Captures the LIXI version number that the application XML was written
        to conform with.
      enum: [2.6.41]
      type: string
    ContentSummary:
      additionalProperties: false
      description: The content of the message.
      properties:
        Application: {$ref: '#/components/schemas/ApplicationSummary'}
      type: object
    ApplicationSummary:
      additionalProperties: false
      description: The set of borrower- and broker-provided data for a single loan
        application.
      properties:
        '@ProductionData': {$ref: '#/components/schemas/yesNoList', description: Indicates
            whether this file contains production or test data.}
        Overview: {$ref: '#/components/schemas/OverviewSummary'}
        PersonApplicant:
          description: Contains applicant details where the applicant is a person,
            being either a borrower or a guarantor, and may be acting for a Trust.
          items: {$ref: '#/components/schemas/PersonApplicantSummary'}
          minItems: 0
          type: array
        SalesChannel: {$ref: '#/components/schemas/SalesChannelSummary'}
      type: object
    OverviewSummary:
      additionalProperties: false
      description: Container element for the user input information applying to the
        entire application.
      properties:
        '@BrokerApplicationReferenceNumber': {$ref: '#/components/schemas/stringType',
          description: A unique identifier assigned to the application by the organisation
            that is submitting the application to the lender. Used by the loan writer
            to identify the application in their business systems.}
        '@LenderApplicationReferenceNumber': {$ref: '#/components/schemas/stringType',
          description: A unique identifier assigned to the application by the lender.}
      type: object
    PersonApplicantSummary:
      additionalProperties: false
      properties:
        '@ApplicantType': {$ref: '#/components/schemas/applicantTypeList', description: Whether
            the loan party is an borrower or guarantor}
        '@CRMReferenceNumber': {$ref: '#/components/schemas/stringType', description: The
            Customer Relationship Management reference number for the person applicant.}
        '@LOSReferenceNumber': {$ref: '#/components/schemas/stringType', description: The
            Loan Originating System reference number for the person applicant.}
        '@UniqueID': {$ref: '#/components/schemas/uniqueIDType', description: System
            assigned unique identifier}
        PersonName: {$ref: '#/components/schemas/personNameType', description: The
            name of the person applicant.}
      type: object
    SalesChannelSummary:
      additionalProperties: false
      description: Captures information about the sales channel through which the
        product is sold to the applicant.
      properties:
        '@Type': {$ref: '#/components/schemas/salesChannelTypeList', description: The
            type of sales channel that is submitting the application.}
        Aggregator: {$ref: '#/components/schemas/AggregatorSummary'}
        LoanWriter: {$ref: '#/components/schemas/LoanWriterSummary'}
      type: object
    AggregatorSummary:
      additionalProperties: false
      description: The company that the loan writer aggregates under
      properties:
        '@AccreditationNumber': {$ref: '#/components/schemas/stringType', description: Captures
            a number such as the accreditation number for the aggregator that has
            been assigned by the lender.}
        '@CompanyName': {$ref: '#/components/schemas/stringType', description: Captures
            the legal name of the aggregator}
      type: object
    LoanWriterSummary:
      additionalProperties: false
      description: The loan writer details.
      properties:
        '@FirstName': {$ref: '#/components/schemas/stringType', description: A person's
            first name.}
        '@OtherIdentifier': {$ref: '#/components/schemas/stringType', description: 'Captures
            an alternative identifier by which the loan writer is known, typically
            issued by the originating organisation rather than the lender.'}
        '@Surname': {$ref: '#/components/schemas/stringType', description: A person's
            surname.}
      type: object
    Instructions:
      additionalProperties: false
      description: Determines the scope of the message. The message can be about the
        Application, Valuation, Mortgage Insurance, Loan Documents or an Error.
      properties:
        ApplicationInstructions: {$ref: '#/components/schemas/ApplicationInstructions'}
        ErrorInstructions:
          description: Error information.
          items: {$ref: '#/components/schemas/ErrorInstructions'}
          minItems: 1
          type: array
      type: object
    ApplicationInstructions:
      additionalProperties: false
      description: Submission information or application status updates.
      properties:
        Submit: {$ref: '#/components/schemas/Submit'}
        Update: {$ref: '#/components/schemas/Update'}
      type: object
    Submit:
      additionalProperties: false
      description: Submission information related to the application process.
      properties:
        '@AssessmentType': {$ref: '#/components/schemas/assessmentTypeApplicationInstructionsList',
          description: Indicates the type of assessment.}
        '@IsAccountVariation': {$ref: '#/components/schemas/yesNoList', description: Flag
            to indicate whether the application being submitted is an account variation.}
        '@IsPricingRequest': {$ref: '#/components/schemas/yesNoList', description: Client
            can submit pricing request to see how much they can borrow and at what
            interest rate.}
        '@IsResubmission': {$ref: '#/components/schemas/yesNoList', description: Flag
            to indicate whether the application being submitted is a resubmission.}
        '@IsSubmissionDocuments': {$ref: '#/components/schemas/yesNoList', description: Indicate
            whether the package contains only submission documents for an already
            submitted application.}
        '@IsSupportingDocuments': {$ref: '#/components/schemas/yesNoList', description: Flag
            to indicate whether the submission only contains supporting documents
            for an already submitted application.}
        Condition:
          description: Information provided in response to a request regarding conditions
            that must be met before the application can be approved.
          items: {$ref: '#/components/schemas/Condition'}
          minItems: 0
          type: array
      type: object
    Condition:
      additionalProperties: false
      properties:
        '@ConditionResponseDescription': {$ref: '#/components/schemas/stringType',
          description: A comment associated with the condition response status.}
        '@ConditionResponseStatus': {$ref: '#/components/schemas/conditionResponseStatusList',
          description: Indicates the degree to which the uploading party deems this
            response will meet the loan condition.}
        '@LoanConditionText': {$ref: '#/components/schemas/stringType', description: Detailed
            description of the condition.}
        '@x_SupportingDocument': {$ref: '#/components/schemas/referenceType', description: The
            unique ID of an attached document that satisfies this condition.}
      type: object
    Update:
      additionalProperties: false
      description: An update on the status of the application or events that have
        occurred in the application workflow.
      properties:
        Event:
          description: An event that has occurred during the application workflow.
          items: {$ref: '#/components/schemas/Event'}
          minItems: 0
          type: array
        Status: {$ref: '#/components/schemas/Status'}
      type: object
    Event:
      additionalProperties: false
      properties:
        '@DateTime': {$ref: '#/components/schemas/dateTimeType', description: The
            date and time at which the event is specified as having occurred.}
        '@Details': {$ref: '#/components/schemas/stringType', description: A free-text
            field for the Broker/Lender to provide event specific details.}
        '@Name': {$ref: '#/components/schemas/eventNameApplicationInstructionsList',
          description: The standardised name for the event that has occurred during
            application processing.}
        '@UniqueID': {$ref: '#/components/schemas/uniqueIDType', description: System
            assigned unique identifier.}
      required: ['@Name']
      type: object
    Status:
      additionalProperties: false
      description: Contains information about the status that the application has
        achieved in the application workflow.
      properties:
        '@DateTime': {$ref: '#/components/schemas/dateTimeType', description: The
            date and time at which the application achieved the status.}
        '@Details': {$ref: '#/components/schemas/stringType', description: 'A free-text
            field for providing details about the Status, such as comments.'}
        '@Name': {$ref: '#/components/schemas/statusNameApplicationInstructionsList',
          description: The status of the loan application.}
        Condition:
          description: Conditions that must be met before the application can be approved.
          items: {$ref: '#/components/schemas/StatusCondition'}
          minItems: 0
          type: array
        Declined:
          description: The reasons the application has been declined.
          items: {$ref: '#/components/schemas/Declined'}
          minItems: 0
          type: array
        PreApproved:
          description: Application pre approval details.
          items: {$ref: '#/components/schemas/PreApproved'}
          minItems: 0
          type: array
      required: ['@Name']
      type: object
    StatusCondition:
      additionalProperties: false
      properties:
        '@ConditionOwner': {$ref: '#/components/schemas/conditionOwnerApplicationInstructionsList',
          description: Indicates the party responsible for satisfying the condition.}
        '@ConditionStatus': {$ref: '#/components/schemas/conditionStatusApplicationInstructionsList',
          description: Indicates the current status of the condition.}
        '@ConditionType': {$ref: '#/components/schemas/stringType', description: The
            type of condition.}
        '@CreatedDateTime': {$ref: '#/components/schemas/dateTimeType', description: The
            date and time at which the condition was issued.}
        '@DocRequirement': {$ref: '#/components/schemas/yesNoList', description: Flag
            that indicates whether this condition is satisfied by the provision of
            a document.}
        '@LoanConditionText': {$ref: '#/components/schemas/stringType', description: Detailed
            description of the condition.E.g. "Privacy Consent form signed by each
            individual applicant"}
        '@PreconditionToStage': {$ref: '#/components/schemas/preConditionToStageApplicationInstructionsList',
          description: The condition must be Satisfied or Waived before the application
            can enter this stage.}
        '@UniqueID': {$ref: '#/components/schemas/uniqueIDType', description: System
            assigned unique identifier.}
        '@UpdatedDateTime': {$ref: '#/components/schemas/dateTimeType', description: The
            date and time at which the condition was last updated.}
        '@x_SupportingDocument': {$ref: '#/components/schemas/referenceType', description: The
            unique ID of an attached document that satisfies this condition.}
        Product:
          description: Where a specific financial product (or multiple products, or
            product set) is conditional upon this requirement being met, the link
            to the product, products/s or product set can be captured here.
          items: {$ref: '#/components/schemas/Product'}
          minItems: 0
          type: array
      required: ['@ConditionStatus', '@PreconditionToStage']
      type: object
    Product:
      additionalProperties: false
      properties:
        '@x_FinancialProduct': {$ref: '#/components/schemas/referenceType', description: 'A
            cross reference to the financial product (or multiple products, or product
            set) that is conditional upon this requirement being met.'}
      type: object
    Declined:
      additionalProperties: false
      properties:
        '@CreditReportingBody': {$ref: '#/components/schemas/creditReportingBodyList',
          description: 'The credit reporting body used to provide the credit report/s,
            where Reason is "Credit History".'}
        '@Details': {$ref: '#/components/schemas/stringType', description: A free-text
            field for providing details about the reason why the application has been
            declined. E.g. when Reason = "Security" the Details would capture the
            details such as "The property is located in a high density area and it
            can't be accepted as security"}
        '@Reason': {$ref: '#/components/schemas/declinedReasonApplicationInstructionsList',
          description: The reason why the application has been declined.}
        '@UniqueID': {$ref: '#/components/schemas/uniqueIDType', description: System
            assigned unique identifier.}
      required: ['@Reason']
      type: object
    PreApproved:
      additionalProperties: false
      properties:
        '@EstablishmentAndGovernmentFees': {$ref: '#/components/schemas/currencyType',
          description: The amount of establishment and government fees to be paid
            should the applicant proceed to approval and draw down with the pre approved
            loan.}
        '@EstimatedBorrowingPower': {$ref: '#/components/schemas/currencyType', description: The
            maximum loan amount estimated by the lender to be supported by the pre
            approval application.}
        '@EstimatedRepaymentAmount': {$ref: '#/components/schemas/currencyType', description: The
            repayment amount estimated by the lender when pre approving the application.}
        '@UniqueID': {$ref: '#/components/schemas/uniqueIDType', description: System
            assigned unique identifier.}
      type: object
    ErrorInstructions:
      additionalProperties: false
      properties:
        '@ErrorSource': {$ref: '#/components/schemas/errorSourceList', description: 'Where
            Error Type is "Data Error", the technology that was used to generate the
            error.'}
        '@ErrorSourceVersion': {$ref: '#/components/schemas/stringType', description: 'Where
            Error Type is "Data Error", the version of the technology identified in
            Error Source that was used to generate the error.'}
        '@Type': {$ref: '#/components/schemas/errorInstructionsTypeList', description: The
            standardised name for the type of error.}
        '@UniqueID': {$ref: '#/components/schemas/uniqueIDType', description: System
            assigned unique identifier.}
        '@XPath': {$ref: '#/components/schemas/stringType', description: 'The position
            in the XML application instance that this message relates to, in the form
            of an XPath expression.'}
        Annotation:
          description: Contains the text of the error message. May occur more than
            once, with message text for each different audience e.g.. layperson, technician.
          items: {$ref: '#/components/schemas/Annotation'}
          minItems: 0
          type: array
      required: ['@Type']
      type: object
    Annotation:
      additionalProperties: false
      properties:
        '@Details': {$ref: '#/components/schemas/stringType', description: The contents
            of the error message.}
        '@Type': {$ref: '#/components/schemas/annotationTypeList', description: An
            indication of the intended audience for the message annotation. Can be
            used by the receiving system to determine the audience for the message
            e.g. technical versus end user error messages.}
        '@UniqueID': {$ref: '#/components/schemas/uniqueIDType', description: System
            assigned unique identifier.}
      type: object
    Publisher:
      additionalProperties: false
      description: The publisher of the specific XML file, being the party responsible
        for the content of the file as well as the work instruction, and to whom the
        response message would be delivered. For a mortgage broker sending an application
        to a lender, this would likely be the aggregator if they are providing the
        software, or perhaps the broker company or broker otherwise. For a lender
        requesting LMI, the lender is the publisher. For the LMI response, the LMI
        provider is the publisher.
      properties:
        '@LIXICode': {$ref: '#/components/schemas/stringType', description: The LIXI-specified
            code of the sender/publisher of the Package.}
        '@PublishedDateTime': {$ref: '#/components/schemas/dateTimeType', description: The
            date and time that the XML file was generated.}
      required: ['@LIXICode']
      type: object
    Recipient:
      additionalProperties: false
      properties:
        '@LIXICode': {$ref: '#/components/schemas/stringType', description: The LIXI-specified
            code for the licensee that is the intended recipient for the Package.}
      required: ['@LIXICode']
      type: object
    SchemaVersion:
      additionalProperties: false
      description: Contains information about the package schema version
      properties:
        '@LIXICustomVersion': {$ref: '#/components/schemas/LIXICustomVersion'}
        '@LIXITransactionType': {$ref: '#/components/schemas/LIXITransactionType'}
        '@LIXIVersion': {$ref: '#/components/schemas/LIXIVersion'}
      required: ['@LIXICustomVersion', '@LIXITransactionType', '@LIXIVersion']
      type: object
    annotationTypeList:
      description: annotationTypeList
      enum: [Code, End User Message, Message, Technical]
      type: string
    applicantTypeList:
      description: applicantTypeList
      enum: [Borrower, Borrower and Guarantor, Guarantor]
      type: string
    assessmentTypeApplicationInstructionsList:
      description: assessmentTypeApplicationInstructionsList
      enum: [Full, Indicative, Quote]
      type: string
    conditionOwnerApplicationInstructionsList:
      description: conditionOwnerApplicationInstructionsList
      enum: [Applicant, Borrower's Solicitor, Branch, Broker, Loan Officer, Settlement
          Agent]
      type: string
    conditionResponseStatusList:
      description: conditionResponseStatusList
      enum: [Met, Not Met, Partially Met]
      type: string
    conditionStatusApplicationInstructionsList:
      description: conditionStatusApplicationInstructionsList
      enum: [Not Satisfied, Open, Referred to Assessor, Satisfied, Waived]
      type: string
    creditReportingBodyList:
      description: creditReportingBodyList
      enum: [D and B, Experian, Veda]
      type: string
    declinedReasonApplicationInstructionsList:
      description: declinedReasonApplicationInstructionsList
      enum: [Affordability, Credit History, Employment Security, Level of Debt, Security]
      type: string
    errorInstructionsTypeList:
      description: errorInstructionsTypeList
      enum: [Data Error, Information, System Error]
      type: string
    errorSourceList:
      description: errorSourceList
      enum: [DTD, Parser, Proprietary, Schematron, XSD, XSLT]
      type: string
    eventNameApplicationInstructionsList:
      description: eventNameApplicationInstructionsList
      enum: [Additional Information Follow Up, Additional Information Has Been Requested,
        Application Received, Application Registered, Application Sent, Awaiting Supporting
          Documents, Cancelled, Comment, Commission Paid, Conditionally Approved,
        Credit Check Ordered, Credit Check Received, Declined, Discharged, Duplicate
          Submission, Employment Check Commenced, Employment Check Completed, Employment
          Check Delayed, Error on Submission, LMI Ordered, LMI Response Received,
        Loan Documents and Requirements Complete, Loan Documents and Requirements
          Incomplete, Loan Documents Certified for Settlement, Loan Documents Error
          Message Returned, Loan Documents Follow Up, Loan Documents Issued, Loan
          Documents Preparation Commenced, Loan Documents Produced, Loan Documents
          Produced and Returned to Lender, Loan Documents Re-issue Request Sent, Loan
          Documents Re-Issued, Loan Documents Received, Loan Documents Request Received,
        Loan Documents Request Sent, Loan Documents Returned Enquiry, Loan Funded
          by Lender, Payout Figure Received, Payout Figure Rejected, PreApproved,
        Progress Payment Complete, Progress Payment Message, Ready for Progress Payment,
        Ready for Settlement, Referred for Credit Assessment, Referred to Broker,
        Referred to Mortgage Insurer, Security Documents Sent to Custodian, Security
          Documents Sent to Lender, Security Packet Received, Security Registered,
        Service Coordinator Assigned, Settlement Cancelled, Settlement Completed,
        Settlement Date Booked, Settlement Date Confirmed, Settlement Date Estimated,
        Settlement Delayed, Settlement Funds Received, Settlement Rebooked, Solicitor
          Instructed, Solicitor Instruction Received, Supporting Documents Determined
          to Be Incomplete, Supporting Documents Have Been Verified, Supporting Documents
          Received, Title Search Ordered, Title Search Received, Unconditionally Approved,
        Valuation Approved, Valuation Cancelled, Valuation Not Required, Valuation
          Ordered, Valuation Received, Variation Initialised, Withdrawn]
      type: string
    nameTitleList:
      description: A list of commonly used formal name titles.
      enum: [Dr, Hon, Lady, Miss, Mr, Mrs, Ms, Mx, Other, Prof, R Hon, Rev, Sir]
      type: string
    personNameType:
      additionalProperties: false
      description: personNameType
      properties:
        '@FirstName': {$ref: '#/components/schemas/stringType', description: A person's
            first name.}
        '@KnownAs': {$ref: '#/components/schemas/stringType', description: 'The familiar
            name, nickname or preferred name by which the person wishes to be known.'}
        '@MiddleNames': {$ref: '#/components/schemas/stringType', description: A person's
            other name. Also referred to as their 'middle name'. For example - where
            someone's name is Frederick Joseph Gilbert - 'Joseph' would be considered
            their other name.}
        '@NameTitle': {$ref: '#/components/schemas/nameTitleList', description: The
            name title this person uses when they are formally addressed.}
        '@OtherNameTitle': {$ref: '#/components/schemas/stringType', description: The
            alternate or other titles this person uses when they are formally addressed.
            This can include multiple titles and/or appropriate abbreviations.}
        '@Surname': {$ref: '#/components/schemas/stringType', description: A person's
            surname.}
      type: object
    preConditionToStageApplicationInstructionsList:
      description: preConditionToStageApplicationInstructionsList
      enum: [Conditional Approval, PreApproval, Referred to Assessor, Settlement,
        Unconditional Approval]
      type: string
    salesChannelTypeList:
      description: salesChannelTypeList
      enum: [Branch Network, Call Centre, Mortgage Broker, Mortgage Manager, Mortgage
          Originator, Online Channel]
      type: string
    statusNameApplicationInstructionsList:
      description: statusNameApplicationInstructionsList
      enum: [Application Received, Application Registered, Application Sent, Application
          Settled, Cancelled, Conditionally Approved, Declined, Indicatively Approved,
        PreApproved, Ready for Settlement, Referred to Assessor, Reverted to Capture,
        Unconditionally Approved, Withdrawn]
      type: string
    yesNoList:
      description: yesNoList
      enum: ['No', 'Yes']
      type: string
    Package:
      additionalProperties: true
      description: 'The root element that contains a message for exchange between
        two end-points involved in the workflow related to the processing of an application
        for a new financial product or change management of an existing financial
        product. The message contains instructions to the recipient requesting some
        workflow activity along with data related to: the applicant and the financial
        product involved; the publisher; one or more recipients; schema version information;
        and any related attachments.'
      properties:
        '@ProductionData': {$ref: '#/components/schemas/yesNoList', description: Indicates
            whether this file contains production or test data.}
        '@UniqueID': {$ref: '#/components/schemas/uniqueIDType', description: System
            assigned unique identifier}
        Content: {$ref: '#/components/schemas/Content'}
        Instructions: {$ref: '#/components/schemas/PackageInstructions'}
        Publisher: {$ref: '#/components/schemas/Publisher'}
        Recipient:
          description: The intended recipients (company or company-specified routing)
            for the Package from the Publisher.
          items: {$ref: '#/components/schemas/Recipient'}
          minItems: 1
          type: array
        SchemaVersion: {$ref: '#/components/schemas/PackageSchemaVersion'}
      required: ['@ProductionData', '@UniqueID', Instructions, Publisher, Recipient,
        SchemaVersion]
      type: object
    SchemaVersionLIXICustomVersion:
      description: 'Each LIXI Schema that is customised by restriction is allocated
        a Custom Version Identifier. If the XML instance is created from a LIXI Transaction
        Schema the LIXICustomVersion is optional and should remain empty. If the XML
        instance is created from a schema that has been Customised by Restriction,
        this attribute is mandatory and holds the composite identifier constructed
        from: the LIXI Code of the author organisation; the Customisation Code (jointly
        defined by LIXI and the customisation author); and the datetimestamp of when
        the Customised Schema was created.'
      enum: [LIXI-CAL-2_6_41-BEN-FULL-Annotated]
      type: string
    Content:
      additionalProperties: false
      description: The content of the message.
      properties:
        Application: {$ref: '#/components/schemas/Application'}
      type: object
    AccountVariation:
      additionalProperties: false
      properties:
        '@Type': {$ref: '#/components/schemas/variationTypeList', description: Flag
            to indicate the type of variation being specified}
        LimitIncrease: {$ref: '#/components/schemas/LimitIncrease'}
      type: object
    LimitIncrease:
      additionalProperties: false
      description: A request to increase the limit on an existing loan account
      properties:
        '@NewLimit': {$ref: '#/components/schemas/currencyType', description: The
            amount that the credit limit is to be increased to}
      type: object
    ContributionFunds:
      additionalProperties: false
      properties:
        '@Amount': {$ref: '#/components/schemas/currencyType', description: The amount
            of the particular contribution.}
        '@Description': {$ref: '#/components/schemas/stringType', description: A free
            form description of the contribution used when the selected Contribution
            Fund Type = "Other"}
        '@Type': {$ref: '#/components/schemas/contributionFundsTypeList', description: The
            type of the particular contribution.}
      type: object
    DetailedComment:
      additionalProperties: false
      properties:
        '@ContextDescription': {$ref: '#/components/schemas/stringType', description: Text
            description of the item the comment refers to}
        '@CreatedDate': {$ref: '#/components/schemas/dateTimeType', description: The
            date that the comment was added to the file}
        Comment: {$ref: '#/components/schemas/Comment'}
      type: object
    Comment:
      additionalProperties: false
      description: A free text comment
      properties:
        $: {$ref: '#/components/schemas/stringType'}
      type: object
    Household:
      additionalProperties: false
      properties:
        '@NumberOfAdults': {$ref: '#/components/schemas/integerType', description: The
            number of adults in the household}
        '@NumberOfDependants': {$ref: '#/components/schemas/integerType', description: The
            number of dependants in this applicant household.}
        '@UniqueID': {$ref: '#/components/schemas/uniqueIDType', description: Unique
            identification for the household}
        Dependant:
          description: A person who depends on the applicant(s) for financial or other
            support
          items: {$ref: '#/components/schemas/Dependant'}
          minItems: 0
          type: array
        ExpenseDetails: {$ref: '#/components/schemas/ExpenseDetails'}
      required: ['@UniqueID']
      type: object
    Dependant:
      additionalProperties: false
      properties:
        '@Age': {$ref: '#/components/schemas/integerType', description: The age of
            the dependant at the time of submitting the application}
        FinancialProvider:
          description: A party that provides financial support to the dependant.
          items: {$ref: '#/components/schemas/FinancialProvider'}
          minItems: 0
          type: array
      type: object
    FinancialProvider:
      additionalProperties: false
      properties:
        '@x_Party': {$ref: '#/components/schemas/referenceType', description: A cross
            reference to the party that provides financial support to the dependant.}
      type: object
    ExpenseDetails:
      additionalProperties: false
      description: The set of expenses declared for the household, including Living
        Expenses and Other Commitments.
      properties:
        LivingExpense:
          description: Contains the details of a single line item that forms part
            of the household's declared living expenses.
          items: {$ref: '#/components/schemas/LivingExpense'}
          minItems: 0
          type: array
        OtherCommitment:
          description: Contains the details of a single line item that forms part
            of the household's commitments other than living expenses.
          items: {$ref: '#/components/schemas/OtherCommitment'}
          minItems: 0
          type: array
      type: object
    LivingExpense:
      additionalProperties: false
      properties:
        '@Amount': {$ref: '#/components/schemas/currencyType', description: The dollar
            amount of this particular living expense for the household as declared
            by the applicant.}
        '@Category': {$ref: '#/components/schemas/livingExpenseCategoryList', description: The
            category that this declared living expense falls under.}
        '@Description': {$ref: '#/components/schemas/stringType', description: A plain
            text description that provides additional detail supporting the Living
            Expense for the household as declared by the applicant.}
        '@EndDate': {$ref: '#/components/schemas/dateType', description: 'Where this
            living expense has an end date, this attribute contains that anticipated
            end date.'}
        '@Frequency': {$ref: '#/components/schemas/frequencyFullList', description: The
            frequency that corresponds to the declared amount for this particular
            Living Expense.}
        '@StartDate': {$ref: '#/components/schemas/dateType', description: 'Where
            this living expense starts in the future, this attribute contains the
            anticipated future start date.'}
        '@UniqueID': {$ref: '#/components/schemas/uniqueIDType', description: Unique
            Identifier for this living expense.}
        PercentResponsible: {$ref: '#/components/schemas/percentOwnedType', description: 'Where
            the party responsible for the expense needs to be established at an individual
            level, this element identifies the party that is responsible for the split
            and corresponding percentages. Each expense may be ''owned'' by one or
            more parties, typically the applicants, so there may be more than one
            owner referenced. An expense may also be partially owned by a non-applicant,
            such as an applicant''s spouse, in which case the third party owner may
            be referenced, or less than 100% ownership of the expense may be assigned.'}
      type: object
    OtherCommitment:
      additionalProperties: false
      properties:
        '@Amount': {$ref: '#/components/schemas/currencyType', description: The dollar
            amount of this particular commitment for the household as declared by
            the applicant.}
        '@Category': {$ref: '#/components/schemas/otherCommitmentCategoryList', description: The
            category that this declared other commitment falls under.}
        '@Description': {$ref: '#/components/schemas/stringType', description: A plain
            text description that provides additional detail supporting the commitment
            for the household as declared by the applicant.}
        '@EndDate': {$ref: '#/components/schemas/dateType', description: 'Where this
            commitment has an end date, this attribute contains that anticipated end
            date.'}
        '@Frequency': {$ref: '#/components/schemas/frequencyFullList', description: The
            frequency that corresponds to the declared amount for this particular
            commitment.}
        '@StartDate': {$ref: '#/components/schemas/dateType', description: 'Where
            this commitment starts in the future, this attribute contains the anticipated
            future start date.'}
        '@UniqueID': {$ref: '#/components/schemas/uniqueIDType', description: Unique
            Identifier for this commitment.}
        PercentResponsible: {$ref: '#/components/schemas/percentOwnedType', description: 'Where
            the party responsible for the commitment needs to be established at an
            individual level, this element identifies the party that is responsible
            for the split and corresponding percentages. Each commitment may be ''owned''
            by one or more parties, typically the applicants, so there may be more
            than one owner referenced. A commitment may also be partially owned by
            a non-applicant, such as an applicant''s spouse, in which case the third
            party owner may be referenced, or less than 100% ownership of the commitment
            may be assigned.'}
      type: object
    Insurance:
      additionalProperties: false
      properties:
        '@EffectiveDate': {$ref: '#/components/schemas/dateType', description: Captures
            the date that the policy is effective from}
        '@ExpiryDate': {$ref: '#/components/schemas/dateType', description: Captures
            the date that the policy expires}
        '@InsuranceType': {$ref: '#/components/schemas/insuranceTypeList', description: Defines
            the type of insurance held}
        '@InsuredAmount': {$ref: '#/components/schemas/currencyType', description: Defines
            the amount insured}
        '@Insurer': {$ref: '#/components/schemas/insurerList', description: Captures
            the name of insurer}
        '@PolicyNumber': {$ref: '#/components/schemas/stringType', description: Captures
            the policy number}
        '@UniqueID': {$ref: '#/components/schemas/uniqueIDType', description: System
            assigned unique identifier}
      type: object
    Liability:
      additionalProperties: false
      properties:
        '@AnnualInterestRate': {$ref: '#/components/schemas/percentType', description: Captures
            the annual interest rate that applies to the liability}
        '@ClearingFromThisLoan': {$ref: '#/components/schemas/clearingFromThisLoanList',
          description: 'Indicates whether the existing loan will be cleared, in whole
            or in part, using funds from the loan being applied for.'}
        '@CreditCardType': {$ref: '#/components/schemas/creditCardTypeList', description: Indicates
            the type of credit card}
        '@CreditLimit': {$ref: '#/components/schemas/currencyType', description: 'Captures
            the limit for a credit card or a line of credit, or the scheduled balance
            for an amortising loan. This is typically the balance that the lender
            uses to assess the liability as the borrower is likely able to draw funds
            up to the limit, or to redraw principal repaid ahead of the scheduled
            balance.'}
        '@Description': {$ref: '#/components/schemas/stringType', description: Captures
            a free text description of the liability when the selected Liability Type
            = "Other".}
        '@InterestChargeFrequency': {$ref: '#/components/schemas/interestChargeFrequencyList',
          description: The frequency at which interest is charged on the loan.}
        '@NewLimit': {$ref: '#/components/schemas/currencyType', description: Captures
            the new limit of the liability when the applicant proposes that they will
            reduce the limit prior to or at settlement of the loan application.}
        '@OutstandingBalance': {$ref: '#/components/schemas/currencyType', description: 'Captures
            the outstanding, current or unpaid balance of the liability.'}
        '@RefinanceCosts': {$ref: '#/components/schemas/currencyType', description: Borrowers
            must state the estimated cost associated with closing a credit facility.
            For each liability being refinanced the applicants will provide the Estimated
            Exit and Break Costs payable to the outgoing finance institution.}
        '@Type': {$ref: '#/components/schemas/liabilityTypeList', description: 'The
            type of liability. Types include credit card limits, HECS debt, existing
            loans, etc.'}
        '@UniqueID': {$ref: '#/components/schemas/uniqueIDType', description: System
            assigned unique identifier}
        AccountNumber: {$ref: '#/components/schemas/financialAccountType', description: Account
            details of the liability}
        PercentOwned: {$ref: '#/components/schemas/PercentOwned'}
        Repayment:
          description: Details of the repayment expense associated with this loan
          items: {$ref: '#/components/schemas/Repayment'}
          minItems: 0
          type: array
        Security:
          description: Details to identify the security property for the loan
          items: {$ref: '#/components/schemas/Security'}
          minItems: 0
          type: array
      type: object
    PercentOwned:
      additionalProperties: false
      description: Identifies the party/s that are responsible for the liability and
        the amount they are responsible for, either as a borrower or guarantor.
      properties:
        '@Proportions': {$ref: '#/components/schemas/proportionsList', description: 'Flag
            to indicate whether the ownership proportions are equal across all owners,
            specified individually for each one, or not specified.'}
        Owner:
          description: The details of the ownership of this liability, either as borrower
            or guarantor.
          items: {$ref: '#/components/schemas/Owner'}
          minItems: 0
          type: array
      type: object
    Owner:
      additionalProperties: false
      properties:
        '@OwnerType': {$ref: '#/components/schemas/applicantTypeList', description: Describes
            whether the linked party is a borrower or guarantor on this liability.}
        '@Percent': {$ref: '#/components/schemas/percentType', description: Captures
            the percentage of the liability that the linked party is responsible for.}
        '@x_Party': {$ref: '#/components/schemas/referenceType', description: A reference
            to a party that is an responsible for the liability.}
      type: object
    Repayment:
      additionalProperties: false
      properties:
        '@PaymentType': {$ref: '#/components/schemas/paymentTypeList', description: Captures
            the type of repayment that is to be made during the specified term}
        '@RepaymentAmount': {$ref: '#/components/schemas/currencyType', description: The
            repayment expense amount associated with repaying this loan}
        '@RepaymentFrequency': {$ref: '#/components/schemas/repaymentFrequencyList',
          description: The payment frequency of the repayment associated with this
            loan}
        '@UniqueID': {$ref: '#/components/schemas/uniqueIDType', description: System
            assigned unique identifier.}
      type: object
    Security:
      additionalProperties: false
      properties:
        '@x_Security': {$ref: '#/components/schemas/referenceType', description: Contains
            a reference link to the security (real estate or non real estate asset)}
      type: object
    LoanDetails:
      additionalProperties: false
      properties:
        '@AmountRequested': {$ref: '#/components/schemas/currencyType', description: 'Captures
            the loan amount as requested by the applicant for this loan account, exclusive
            of to-be-capitalised fees and/or LMI.'}
        '@EstimatedSettlementDate': {$ref: '#/components/schemas/dateType', description: Captures
            the date that the applicant estimates that the application will settle.}
        '@LoanType': {$ref: '#/components/schemas/loanTypeList', description: The
            type of credit facility.}
        '@ProductCode': {$ref: '#/components/schemas/stringType', description: Captures
            an identifying code for the loan product applied for. This code is typically
            issued by the lender and enables the lender's systems to uniquely identify
            the product.}
        '@UniqueID': {$ref: '#/components/schemas/uniqueIDType', description: System
            assigned unique identifier}
        DocumentationInstructions: {$ref: '#/components/schemas/documentationInstructionsType',
          description: Contains information specifying where the lender is to send
            the loan documents once the loan has been approved. This nomination over-rides
            an equivalent one at the Application level.}
        FeaturesSelected: {$ref: '#/components/schemas/FeaturesSelected'}
        LendingPurpose:
          description: Details of the purpose for which the applicant intends to use
            the loan funds.
          items: {$ref: '#/components/schemas/LendingPurpose'}
          minItems: 0
          type: array
        LoanPurpose: {$ref: '#/components/schemas/LoanPurpose'}
        Package:
          description: Contains information about a package option that may be available
            for the individual loan account.
          items: {$ref: '#/components/schemas/LoanDetailsPackage'}
          minItems: 0
          type: array
        Security:
          description: Contains a reference to a security property that is submitted
            with the loan application, and information about the relationship between
            the subject loan account and that security property.
          items: {$ref: '#/components/schemas/LoanDetailsSecurity'}
          minItems: 0
          type: array
        Term: {$ref: '#/components/schemas/Term'}
      type: object
    FeaturesSelected:
      additionalProperties: false
      description: Contains information about the product features requested by the
        applicant.
      properties:
        '@Offset': {$ref: '#/components/schemas/yesNoList', description: Indicates
            whether the applicant requests that a 100% offset account facility be
            established for the loan account.}
      type: object
    LendingPurpose:
      additionalProperties: false
      properties:
        '@ABSLendingPurpose': {$ref: '#/components/schemas/stringType', description: Captures
            the free text description of the ABS Lending Purpose Code.}
        '@ABSLendingPurposeCode': {$ref: '#/components/schemas/absLendingPurposeCodeList',
          description: Captures the ABS code for this purpose for which the loan funds
            will be used by the applicant.}
      type: object
    LoanPurpose:
      additionalProperties: false
      description: Contains information about the main purpose for which the applicant
        intends to use the loan funds.
      properties:
        '@PrimaryPurpose': {$ref: '#/components/schemas/primaryPurposeLoanPurposeList',
          description: Captures the primary purpose for which the loan funds will
            be used by the applicant. Categories reflect the categories used in classifying
            a loan as regulated or unregulated under the NCCP.}
      type: object
    LoanDetailsPackage:
      additionalProperties: false
      properties:
        '@Category': {$ref: '#/components/schemas/stringType', description: Captures
            a lender defined category to which the requested package belongs.}
        '@Code': {$ref: '#/components/schemas/stringType', description: A unique code
            representing the product package being requested by the applicant.}
        '@MemberID': {$ref: '#/components/schemas/stringType', description: Membership
            Identifier of the applicant issued by the Organisation the applicant claims
            to belong to and therefore qualify for the package associated with that
            Organisation. May be provided when Organisation is specified.}
        '@Name': {$ref: '#/components/schemas/stringType', description: 'Captures
            the name of a package that the applicant is applying for. A package commonly
            gives the borrowers certain benefits, such as an interest rate and fee
            discounts, for a fee. There may be rules that determine whether the applicants
            qualify for the package.'}
        '@OptionCode': {$ref: '#/components/schemas/stringType', description: A unique
            code identifying an option that applies to a package.}
        '@Organisation': {$ref: '#/components/schemas/stringType', description: A
            code or name that identifies the organisation under which the package
            is offered.}
      type: object
    LoanDetailsSecurity:
      additionalProperties: false
      properties:
        '@UniqueID': {$ref: '#/components/schemas/uniqueIDType', description: System
            assigned unique identifier.}
        '@x_Security': {$ref: '#/components/schemas/referenceType', description: 'Contains
            a reference to a security (real estate or non real estate asset) that
            is submitted with the loan application, and information about the relationship
            between the subject loan account and that security.'}
      type: object
    Term:
      additionalProperties: false
      description: Details of the total term of the credit product and any introductory
        terms, such as an interest only term (including interest only reasons) or
        a fixed rate term that applies for an initial period at the start of the product.
      properties:
        '@PaymentType': {$ref: '#/components/schemas/paymentTypeList', description: Captures
            the type of repayment that is to be made during the specified term}
        '@TotalTermDuration': {$ref: '#/components/schemas/integerType', description: 'The
            Duration of the specified loan term, as a multiple of the Units'}
        '@TotalTermType': {$ref: '#/components/schemas/totalTermTypeList', description: The
            type of loan term should indicate that the loan term is either the total
            length of the term or the amortised term as required by the lender.}
        '@TotalTermUnits': {$ref: '#/components/schemas/loanTermUnitsList', description: Captures
            the period described by the number specified for term.}
        DistinctLoanPeriod:
          description: A distinct loan period, where each period may have a different
            payment type, interest type, rate composition.
          items: {$ref: '#/components/schemas/DistinctLoanPeriod'}
          minItems: 0
          type: array
        InterestOnlyReason:
          description: The applicants' reasons for applying for an interest-only term
            within this loan.
          items: {$ref: '#/components/schemas/InterestOnlyReason'}
          minItems: 0
          type: array
      type: object
    DistinctLoanPeriod:
      additionalProperties: false
      properties:
        '@InterestType': {$ref: '#/components/schemas/interestTypeList', description: The
            type of interest that is to be paid during the distinct loan period.}
        '@PaymentType': {$ref: '#/components/schemas/paymentTypeList', description: The
            type of repayment that is to be made during the distinct loan period.}
        Duration: {$ref: '#/components/schemas/durationType', description: The duration
            of the distinct loan period.}
      type: object
    InterestOnlyReason:
      additionalProperties: false
      properties:
        '@Description': {$ref: '#/components/schemas/stringType', description: A free-text
            description provided by the applicant/s that provides further detail regarding
            this reason for applying for an interest-only term within this loan.}
        '@Reason': {$ref: '#/components/schemas/interestOnlyReasonList', description: The
            reason that the applicant is applying for an interest-only term within
            this loan.}
      type: object
    NonRealEstateAsset:
      additionalProperties: false
      properties:
        '@Type': {$ref: '#/components/schemas/nonRealEstateAssetTypeList', description: Indicates
            what the type of non real estate asset being described.}
        '@UniqueID': {$ref: '#/components/schemas/uniqueIDType', description: Unique
            identification assigned to the Asset}
        EstimatedValue: {$ref: '#/components/schemas/EstimatedValue'}
        FinancialAsset: {$ref: '#/components/schemas/FinancialAsset'}
        MotorVehicle: {$ref: '#/components/schemas/MotorVehicle'}
        OtherAsset: {$ref: '#/components/schemas/OtherAsset'}
        PercentOwned: {$ref: '#/components/schemas/percentOwnedType', description: 'An
            asset may be owned by one or more parties, typically the applicants, so
            there may be more than one owner referenced. An asset may also be partially
            owned by a non-applicant, such as an applicant''s spouse, in which case
            the third party owner may be referenced, or less than 100% ownership of
            the asset may be assigned. If the asset is to be purchased, then this
            indicates the expected ownership arrangement post-settlement'}
      type: object
    EstimatedValue:
      additionalProperties: false
      description: The estimated value of the asset
      properties:
        '@EstimateBasis': {$ref: '#/components/schemas/estimateBasisNonRealEstateAssetList',
          description: Indicates whether the estimate was based on the valuation of
            the applicant or a certified valuer.}
        '@Value': {$ref: '#/components/schemas/currencyType', description: The estimated
            value of the non real estate asset.}
      type: object
    FinancialAsset:
      additionalProperties: false
      description: Captures the details of a financial account asset or security -
        e.g. Cash, cash equivalents, and accounts at financial institutions
      properties:
        '@Description': {$ref: '#/components/schemas/stringType', description: A description
            of the account}
        '@Type': {$ref: '#/components/schemas/financialAssetTypeList', description: The
            type of financial asset}
        AccountNumber: {$ref: '#/components/schemas/financialAccountType', description: Account
            details for the financial account asset}
        ExtraFeature:
          description: An extra feature of the non real estate asset that can not
            be captured by any other attribute.
          items: {$ref: '#/components/schemas/ExtraFeature'}
          minItems: 0
          type: array
      type: object
    ExtraFeature:
      additionalProperties: false
      properties:
        '@Name': {$ref: '#/components/schemas/stringType', description: Name of the
            extra feature.}
        '@Specification': {$ref: '#/components/schemas/stringType', description: Specification
            of the extra feature.}
      type: object
    MotorVehicle:
      additionalProperties: false
      description: Contains information about an asset that is a motor vehicle.
      properties:
        '@Description': {$ref: '#/components/schemas/stringType', description: A description
            of the motor vehicle}
        '@Make': {$ref: '#/components/schemas/stringType', description: 'Captures
            the make of the vehicle, such as Holden'}
        '@OtherInformation': {$ref: '#/components/schemas/stringType', description: Other
            information which may impact the value of the asset}
        '@Type': {$ref: '#/components/schemas/vehicleTypeList', description: 'The
            type of vehicle. Types include bicycle, car, caravan, truck etc.'}
        '@Year': {$ref: '#/components/schemas/gYearType', description: Captures the
            year in which the vehicle was first registered or the model year.}
      type: object
    OtherAsset:
      additionalProperties: false
      description: Container element for other assets.
      properties:
        '@Description': {$ref: '#/components/schemas/stringType', description: 'Description
            of the asset, especially if Other Asset type is "Other"'}
        '@Type': {$ref: '#/components/schemas/otherAssetTypeList', description: Container
            element for other non real estate assets}
      type: object
    OtherIncome:
      additionalProperties: false
      properties:
        '@Amount': {$ref: '#/components/schemas/currencyType', description: The gross
            amount of income received in the period specified for the income item.}
        '@BenefitsDescription': {$ref: '#/components/schemas/stringType', description: 'Captures
            a free text description of the benefits, especially if the benefit type
            is "other"'}
        '@Description': {$ref: '#/components/schemas/stringType', description: Captures
            a free text description of the income when the selected Income Type =
            "Other"}
        '@EndDate': {$ref: '#/components/schemas/dateType', description: Captures
            the end date of the period for which the income being described is earned
            or received.}
        '@Frequency': {$ref: '#/components/schemas/frequencyShortList', description: The
            frequency at which the applicant is receiving other income gross amount.}
        '@GovernmentBenefitsType': {$ref: '#/components/schemas/governmentBenefitsTypeList',
          description: 'Where the applicant has indicated government benefits as an
            income source, the type of benefits should be captured. Such as family,
            unemployed or widow''s allowance.'}
        '@StartDate': {$ref: '#/components/schemas/dateType', description: Captures
            the start date of the period for which the income being described is earned
            or received.}
        '@Type': {$ref: '#/components/schemas/otherIncomeTypeList', description: The
            type of income described by the income item.}
        '@UniqueID': {$ref: '#/components/schemas/uniqueIDType', description: System
            assigned unique identifier}
        PercentOwned: {$ref: '#/components/schemas/percentOwnedType', description: 'An
            income item may be owned by one or more parties, typically the applicants,
            so there may be more than one owner referenced. An income item may also
            be partially owned by a non-applicant, such as an applicant''s spouse,
            in which case the third party owner may be referenced, or less than 100%
            ownership of the income may be assigned.'}
      type: object
    Overview:
      additionalProperties: false
      description: Container element for the user input information applying to the
        entire application.
      properties:
        '@ApplicationType': {$ref: '#/components/schemas/applicationTypeList', description: 'Gives
            a broad indication of what the main application type is for, particularly
            if the lender has different loan processing arrangements.'}
        '@BrokerApplicationReferenceNumber': {$ref: '#/components/schemas/stringType',
          description: A unique identifier assigned to the application by the organisation
            that is submitting the application to the lender. Used by the loan writer
            to identify the application in their business systems.}
        '@DocType': {$ref: '#/components/schemas/applicationDocTypeList', description: Captures
            the level of income verification documentation that the applicants will
            provide to the lender.}
        '@IsBridgingFinance': {$ref: '#/components/schemas/yesNoList', description: Flag
            to note whether the loan application includes funds for bridging between
            a purchase and a subsequent sale.}
        '@LenderApplicationReferenceNumber': {$ref: '#/components/schemas/stringType',
          description: A unique identifier assigned to the application by the lender.}
        BridgingFinance: {$ref: '#/components/schemas/BridgingFinance'}
      type: object
    BridgingFinance:
      additionalProperties: false
      description: Details on the bridging finance request.
      properties:
        '@EndDebt': {$ref: '#/components/schemas/currencyType', description: The end
            amount of the bridging loan.}
      type: object
    PersonApplicant:
      additionalProperties: false
      properties:
        '@ApplicantType': {$ref: '#/components/schemas/applicantTypeList', description: Whether
            the loan party is an borrower or guarantor}
        '@CRMReferenceNumber': {$ref: '#/components/schemas/stringType', description: The
            Customer Relationship Management reference number for the person applicant.}
        '@Citizenship': {$ref: '#/components/schemas/countryCodeList', description: The
            country that the person is a citizen of.}
        '@DateOfBirth': {$ref: '#/components/schemas/dateType', description: Captures
            the date of birth for the applicant.}
        '@FirstHomeBuyer': {$ref: '#/components/schemas/yesNoList', description: The
            person should indicate whether they are a first home buyer in accordance
            with the State Revenue Office's definition of a first home buyer.}
        '@IsExistingCustomer': {$ref: '#/components/schemas/yesNoList', description: Indicates
            whether the applicant is an existing customer of the lender being applied
            to.}
        '@LOSReferenceNumber': {$ref: '#/components/schemas/stringType', description: The
            Loan Originating System reference number for the person applicant.}
        '@MaritalStatus': {$ref: '#/components/schemas/maritalStatusList', description: The
            marital status of the applicant should be indicated}
        '@PrimaryApplicant': {$ref: '#/components/schemas/yesNoList', description: Indicates
            whether the lender should consider the party to be the primary applicant
            when processing the loan application. The significance of the primary
            applicant to the application varies from lender to lender.}
        '@ResidencyStatus': {$ref: '#/components/schemas/residencyStatusList', description: 'Indicates
            the applicant''s residency status as either a permanent resident, temporary
            resident or non-resident.'}
        '@UniqueID': {$ref: '#/components/schemas/uniqueIDType', description: System
            assigned unique identifier}
        '@x_Accountant': {$ref: '#/components/schemas/referenceType', description: Link
            to the person's current accountant.}
        '@x_Household': {$ref: '#/components/schemas/referenceType', description: Links
            to a Household element}
        Contact: {$ref: '#/components/schemas/Contact'}
        CreditHistory:
          description: Contains details of an applicant's credit history as provided
            both by credit reference bureaus and/or by the applicant themselves.
          items: {$ref: '#/components/schemas/CreditHistory'}
          minItems: 0
          type: array
        Employment:
          description: Contains information about the persons current or previous
            employment.
          items: {$ref: '#/components/schemas/Employment'}
          minItems: 0
          type: array
        ExistingCustomer: {$ref: '#/components/schemas/ExistingCustomer'}
        MaritalStatusDetails: {$ref: '#/components/schemas/MaritalStatusDetails'}
        NextOfKin: {$ref: '#/components/schemas/NextOfKin'}
        PersonName: {$ref: '#/components/schemas/personNameType', description: The
            name of the person applicant.}
        PowerOfAttorney: {$ref: '#/components/schemas/PowerOfAttorney'}
        PreviousName: {$ref: '#/components/schemas/PreviousName'}
        Privacy: {$ref: '#/components/schemas/Privacy'}
        ProofOfIdentity:
          description: Contains details of a document used to verify identity.
          items: {$ref: '#/components/schemas/ProofOfIdentity'}
          minItems: 0
          type: array
      type: object
    Contact:
      additionalProperties: false
      description: Container element for the applicant contact details
      properties:
        '@PreferredContact': {$ref: '#/components/schemas/preferredContactPersonList',
          description: The preferred method for contacting this applicant.}
        CurrentAddress: {$ref: '#/components/schemas/CurrentAddress'}
        EmailAddress:
          description: Email address of the applicant.
          items: {$ref: '#/components/schemas/EmailAddress'}
          minItems: 0
          type: array
        FaxNumber: {$ref: '#/components/schemas/phoneType', description: Fax number
            for the Applicant.}
        HomePhone: {$ref: '#/components/schemas/phoneType', description: Home phone
            captures the phone number used predominantly while this person is at home.}
        Mobile: {$ref: '#/components/schemas/phoneType', description: Applicant mobile
            number.}
        PreviousAddress: {$ref: '#/components/schemas/PreviousAddress'}
        PriorAddress:
          description: Container element for an address prior to the 'previous' address
          items: {$ref: '#/components/schemas/PriorAddress'}
          minItems: 0
          type: array
        WorkPhone: {$ref: '#/components/schemas/phoneType', description: Where an
            applicant has a work number.}
      type: object
    CurrentAddress:
      additionalProperties: false
      description: The current address details for the applicant
      properties:
        '@HousingStatus': {$ref: '#/components/schemas/housingStatusList', description: 'Indicates
            the housing status of this applicant e.g. Whether they are boarding, renting,
            own their own home, living with parents, other, etc.'}
        '@OtherHousingStatusDescription': {$ref: '#/components/schemas/stringType',
          description: The detailed housing status information of the applicant's
            current address. To be used when the status is set to 'Other'.}
        '@StartDate': {$ref: '#/components/schemas/dateType', description: The date
            that the applicant moved to the residential address}
        '@x_MailingAddress': {$ref: '#/components/schemas/referenceType', description: Reference
            to the applicant's current address for mailing documents}
        '@x_ResidentialAddress': {$ref: '#/components/schemas/referenceType', description: Reference
            to the applicant's current residential address}
        Duration: {$ref: '#/components/schemas/durationType', description: Container
            element for capturing the duration at the current address.}
      type: object
    EmailAddress:
      additionalProperties: false
      properties:
        '@Email': {$ref: '#/components/schemas/emailPattern', description: An email
            address for the person}
      type: object
    PreviousAddress:
      additionalProperties: false
      description: Container element for an address previous to the current address
      properties:
        '@EndDate': {$ref: '#/components/schemas/dateType', description: The date
            that the applicant left this address}
        '@HousingStatus': {$ref: '#/components/schemas/housingStatusList', description: 'Indicates
            the housing status of this applicant e.g. Whether they are boarding, renting,
            own their own home, living with parents, other, etc.'}
        '@OtherHousingStatusDescription': {$ref: '#/components/schemas/stringType',
          description: The detailed housing status information of the applicant's
            previous address. To be used when the status is set to 'Other'.}
        '@StartDate': {$ref: '#/components/schemas/dateType', description: The date
            that the applicant moved to this address}
        '@x_ResidentialAddress': {$ref: '#/components/schemas/referenceType', description: Reference
            to the applicant's previous residential address}
        Duration: {$ref: '#/components/schemas/durationType', description: Container
            element for capturing the duration at the previous address.}
      type: object
    PriorAddress:
      additionalProperties: false
      properties:
        '@EndDate': {$ref: '#/components/schemas/dateType', description: The date
            that the applicant left this address}
        '@HousingStatus': {$ref: '#/components/schemas/housingStatusList', description: 'Indicates
            the housing status of this applicant e.g. Whether they are boarding, renting,
            own their own home, living with parents, other, etc.'}
        '@OtherHousingStatusDescription': {$ref: '#/components/schemas/stringType',
          description: The detailed housing status information of the applicant's
            prior address. To be used when the status is set to 'Other'.}
        '@StartDate': {$ref: '#/components/schemas/dateType', description: The date
            that the applicant moved to this address}
        '@x_ResidentialAddress': {$ref: '#/components/schemas/referenceType', description: Reference
            to the applicant's prior residential address}
        Duration: {$ref: '#/components/schemas/durationType', description: Container
            element for capturing the duration at the prior address.}
      type: object
    CreditHistory:
      additionalProperties: false
      properties:
        '@Details': {$ref: '#/components/schemas/stringType', description: 'A comment
            about the applicant''s credit history, possibly in mitigation or explanation
            of credit issues.'}
        '@Issue': {$ref: '#/components/schemas/creditHistoryIssueList', description: Describes
            the type of Credit Issues the applicant has experienced}
      type: object
    Employment:
      additionalProperties: false
      properties:
        NotEmployed: {$ref: '#/components/schemas/NotEmployed'}
        PAYG: {$ref: '#/components/schemas/PAYG'}
        SelfEmployed: {$ref: '#/components/schemas/SelfEmployed'}
      type: object
    NotEmployed:
      additionalProperties: false
      description: Where the applicant is unemployed, the details should be submitted,
        if relevant to this instance of employment.
      properties:
        '@EndDate': {$ref: '#/components/schemas/dateType', description: The end date
            indicates when the applicant finished being not employed.}
        '@HomeDuties': {$ref: '#/components/schemas/yesNoList', description: The applicants
            should indicate whether they perform home duties.}
        '@OnBenefits': {$ref: '#/components/schemas/yesNoList', description: The applicants
            should indicate whether they are receiving unemployment benefits.}
        '@Retired': {$ref: '#/components/schemas/yesNoList', description: The applicants
            should indicate whether they are retired}
        '@StartDate': {$ref: '#/components/schemas/dateType', description: The start
            date indicates when the applicant commenced being not employed.}
        '@Status': {$ref: '#/components/schemas/employmentStatusList', description: The
            current or previous status of the employment}
        '@Student': {$ref: '#/components/schemas/yesNoList', description: The applicants
            should indicate whether they are currently a student.}
        '@UniqueID': {$ref: '#/components/schemas/uniqueIDType', description: System
            assigned unique identifier}
        Duration: {$ref: '#/components/schemas/durationType', description: Container
            element for capturing the duration of employment.}
        Income: {$ref: '#/components/schemas/Income'}
      type: object
    Income:
      additionalProperties: false
      description: Income details for this period without employment.
      properties:
        '@GovernmentBenefitsAmount': {$ref: '#/components/schemas/currencyType', description: 'Captures
            the government benefits income gross amount received by the applicant,
            excluding Jobseeker Support (New Zealand) and Newstart Allowance (Australia)
            which are captured separately.'}
        '@NetGovernmentBenefitsAmount': {$ref: '#/components/schemas/currencyType',
          description: 'Captures the net government benefits income amount received
            by the applicant, excluding Jobseeker Support (New Zealand) and Newstart
            Allowance (Australia) which are captured separately.'}
        '@NetPrivatePensionAmount': {$ref: '#/components/schemas/currencyType', description: Captures
            the net pension income amount received by the applicant.}
        '@NetSuperannuationAmount': {$ref: '#/components/schemas/currencyType', description: Captures
            the net superannuation amount received by the applicant.}
        '@PrivatePensionAmount': {$ref: '#/components/schemas/currencyType', description: Captures
            the gross pension income amount received by the applicant.}
        '@SMSF': {$ref: '#/components/schemas/yesNoList', description: Flag to indicate
            whether the superannuation income received by the applicant is from a
            Self Managed Super Fund.}
        '@SuperannuationAmount': {$ref: '#/components/schemas/currencyType', description: Captures
            the gross superannuation amount received by the applicant.}
      type: object
    PAYG:
      additionalProperties: false
      description: Indicates that the employment is PAYG employment.
      properties:
        '@ANZSCOOccupationCode': {$ref: '#/components/schemas/anzscoOccupationCodeList',
          description: 'The ANZSCO occupation code specifying the person''s role or
            occupation in this employment. This attribute is restricted to the list
            of ANZSCO occupation codes published by the ABS on 26/03/2013 that superseded
            the ASCO Occupation Codes, although the superseded codes still remain
            in common use.'}
        '@Basis': {$ref: '#/components/schemas/paygBasisList', description: 'The applicant
            should indicate whether the employment type is fulltime, part-time, contract,
            temporary, casual, commission only or seasonal.'}
        '@EmployerType': {$ref: '#/components/schemas/employerTypeList', description: The
            applicant should indicate whether the employer type belongs to the Public
            (government) or Private sectors.}
        '@EndDate': {$ref: '#/components/schemas/dateType', description: The end date
            indicates when the applicant finalised their employment.}
        '@Occupation': {$ref: '#/components/schemas/stringType', description: Text
            description of the person's role or occupation for this employment}
        '@OnProbation': {$ref: '#/components/schemas/yesNoList', description: The
            applicant should indicate whether they are on probation with their current
            employer.}
        '@PositionTitle': {$ref: '#/components/schemas/stringType', description: The
            applicant should submit their position title relating to this instance
            of employment.}
        '@StartDate': {$ref: '#/components/schemas/dateType', description: The start
            date indicates when the applicant commenced their employment.}
        '@Status': {$ref: '#/components/schemas/employmentStatusList', description: The
            current or previous status of the employment}
        '@UniqueID': {$ref: '#/components/schemas/uniqueIDType', description: System
            assigned unique identifier}
        '@x_Employer': {$ref: '#/components/schemas/referenceType', description: The
            employer details for this instance of PAYG employment.}
        Duration: {$ref: '#/components/schemas/durationType', description: Container
            element for capturing the duration of employment.}
        Income: {$ref: '#/components/schemas/PAYGIncome'}
      type: object
    PAYGIncome:
      additionalProperties: false
      description: Details of the income income-related amounts.
      properties:
        '@BonusAmount': {$ref: '#/components/schemas/currencyType', description: The
            gross bonus income amount received by the applicant.}
        '@BonusFrequency': {$ref: '#/components/schemas/frequencyShortList', description: The
            frequency of the gross bonus income payment.}
        '@CarAllowanceAmount': {$ref: '#/components/schemas/currencyType', description: The
            gross car allowance amount received by the applicant.}
        '@CarAllowanceFrequency': {$ref: '#/components/schemas/frequencyShortList',
          description: The frequency of the gross car allowance income payment.}
        '@CommissionAmount': {$ref: '#/components/schemas/currencyType', description: The
            gross commission income amount received by the applicant.}
        '@CommissionFrequency': {$ref: '#/components/schemas/frequencyShortList',
          description: The frequency of the gross commission income payment.}
        '@GrossRegularOvertimeAmount': {$ref: '#/components/schemas/currencyType',
          description: The gross regular overtime income amount received by the applicant.}
        '@GrossRegularOvertimeFrequency': {$ref: '#/components/schemas/frequencyShortList',
          description: The frequency of the gross regular overtime income payment.}
        '@GrossSalaryAmount': {$ref: '#/components/schemas/currencyType', description: The
            gross salary income amount received by the applicant.}
        '@GrossSalaryFrequency': {$ref: '#/components/schemas/frequencyShortList',
          description: The frequency of the gross salary income payment.}
        '@NetBonusAmount': {$ref: '#/components/schemas/currencyType', description: The
            net bonus income amount received by the applicant.}
        '@NetBonusFrequency': {$ref: '#/components/schemas/frequencyShortList', description: The
            frequency at which the applicant is receiving bonus income net amount.}
        '@NetCarAllowanceAmount': {$ref: '#/components/schemas/currencyType', description: The
            net car allowance amount received by the applicant.}
        '@NetCarAllowanceFrequency': {$ref: '#/components/schemas/frequencyShortList',
          description: The frequency at which the applicant is receiving car allowance
            income net amount.}
        '@NetCommissionAmount': {$ref: '#/components/schemas/currencyType', description: The
            net commission income amount received by the applicant.}
        '@NetCommissionFrequency': {$ref: '#/components/schemas/frequencyShortList',
          description: The frequency at which the applicant is receiving commission
            income net amount.}
        '@NetRegularOvertimeAmount': {$ref: '#/components/schemas/currencyType', description: The
            net regular overtime income amount received by the applicant.}
        '@NetRegularOvertimeFrequency': {$ref: '#/components/schemas/frequencyShortList',
          description: The frequency at which the applicant is receiving regular overtime
            income net amount.}
        '@NetSalaryAmount': {$ref: '#/components/schemas/currencyType', description: The
            net salary income amount received by the applicant.}
        '@NetSalaryFrequency': {$ref: '#/components/schemas/frequencyShortList', description: The
            frequency at which the applicant is receiving salary income net amount.}
        '@WorkAllowanceAmount': {$ref: '#/components/schemas/currencyType', description: The
            gross work allowance amount received by the applicant.}
        '@WorkAllowanceFrequency': {$ref: '#/components/schemas/frequencyShortList',
          description: The frequency of the gross work allowance income payment.}
        '@WorkersCompensationAmount': {$ref: '#/components/schemas/currencyType',
          description: The gross workers compensation income amount received by the
            applicant.}
        '@WorkersCompensationFrequency': {$ref: '#/components/schemas/frequencyShortList',
          description: The frequency of the gross workers compensation income payment.}
      type: object
    SelfEmployed:
      additionalProperties: false
      description: Self-employed refers to people who 'work for themselves' in either
        wholly owned or part-owned organisations, including when operating as a (paid)
        Director. The organisation may or may not employ other people.
      properties:
        '@ANZSCOOccupationCode': {$ref: '#/components/schemas/anzscoOccupationCodeList',
          description: 'The ANZSCO occupation code specifying the person''s role or
            occupation in this employment. This attribute is restricted to the list
            of ANZSCO occupation codes published by the ABS on 26/03/2013 that superseded
            the ASCO Occupation Codes, although the superseded codes still remain
            in common use.'}
        '@EndDate': {$ref: '#/components/schemas/dateType', description: The end date
            indicates when the applicant finalised their employment.}
        '@Occupation': {$ref: '#/components/schemas/stringType', description: Text
            description of the person's role or occupation for this employment}
        '@StartDate': {$ref: '#/components/schemas/dateType', description: The start
            date indicates when the applicant commenced their employment.}
        '@UniqueID': {$ref: '#/components/schemas/uniqueIDType', description: System
            assigned unique identifier}
        '@x_Accountant': {$ref: '#/components/schemas/referenceType', description: Link
            to the Applicant's accountant}
        '@x_Employer': {$ref: '#/components/schemas/referenceType', description: The
            applicant should capture their company details for this instance of self-employment.}
        BusinessIncomePrevious: {$ref: '#/components/schemas/BusinessIncomePrevious'}
        BusinessIncomePrior: {$ref: '#/components/schemas/BusinessIncomePrior'}
        BusinessIncomeRecent: {$ref: '#/components/schemas/BusinessIncomeRecent'}
        BusinessIncomeYearToDate: {$ref: '#/components/schemas/BusinessIncomeYearToDate'}
        DeclaredIncome: {$ref: '#/components/schemas/DeclaredIncome'}
        Duration: {$ref: '#/components/schemas/durationType', description: Container
            element for capturing the duration of employment.}
      type: object
    BusinessIncomePrevious:
      additionalProperties: false
      description: Details of the share of the income or income-related amounts in
        the previous financial year (immediately preceding the most recent full financial
        year), attributable to this applicant (for year = current year -2).
      properties:
        '@EndDate': {$ref: '#/components/schemas/dateType', description: 'The end
            date for the stated income, generally the end of a financial year'}
        '@ProfitBeforeTax': {$ref: '#/components/schemas/currencyType', description: Captures
            the net profit/profit before tax for the specified financial year.}
        '@StartDate': {$ref: '#/components/schemas/dateType', description: 'The start
            date for the stated income, generally the start of a financial year'}
        Addback: {$ref: '#/components/schemas/Addback'}
      type: object
    Addback:
      additionalProperties: false
      description: Container element for Previous Business Income Addback
      properties:
        '@Depreciation': {$ref: '#/components/schemas/currencyType', description: Depreciation
            amount that can be an addback to the income}
        '@Interest': {$ref: '#/components/schemas/currencyType', description: Interest
            amount that can be an addback to the income}
        '@Lease': {$ref: '#/components/schemas/currencyType', description: Lease amount
            that can be an addback to the income}
        '@NonCashBenefits': {$ref: '#/components/schemas/currencyType', description: Non-cash
            benefits amount that can be an addback to the income}
        '@NonRecurringExpenses': {$ref: '#/components/schemas/currencyType', description: Non-recurring
            expense amount that can be an addback to the income}
        OtherAddback:
          description: Other addback that cannot otherwise be captured under a specific
            addback category.
          items: {$ref: '#/components/schemas/OtherAddback'}
          minItems: 0
          type: array
      type: object
    OtherAddback:
      additionalProperties: false
      properties:
        '@Amount': {$ref: '#/components/schemas/currencyType', description: Amount
            that can be an addback to the income.}
        '@Description': {$ref: '#/components/schemas/stringType', description: Decription
            of the other addback.}
      type: object
    BusinessIncomePrior:
      additionalProperties: false
      description: Details of the share of the income or income-related amounts in
        the prior financial year (two years prior to the most recent full financial
        year), attributable to this applicant (for year = current year -3).
      properties:
        '@EndDate': {$ref: '#/components/schemas/dateType', description: 'The end
            date for the stated income, generally the end of a financial year.'}
        '@ProfitBeforeTax': {$ref: '#/components/schemas/currencyType', description: Captures
            the net profit/profit before tax for the specified financial year.}
        '@StartDate': {$ref: '#/components/schemas/dateType', description: 'The start
            date for the stated income, generally the start of a financial year.'}
        Addback: {$ref: '#/components/schemas/BusinessIncomePriorAddback'}
      type: object
    BusinessIncomePriorAddback:
      additionalProperties: false
      description: Container element for Prior Business Income Addback
      properties:
        '@Depreciation': {$ref: '#/components/schemas/currencyType', description: Depreciation
            amount that can be an addback to the income}
        '@Interest': {$ref: '#/components/schemas/currencyType', description: Interest
            amount that can be an addback to the income}
        '@Lease': {$ref: '#/components/schemas/currencyType', description: Lease amount
            that can be an addback to the income}
        '@NonCashBenefits': {$ref: '#/components/schemas/currencyType', description: Non-cash
            benefits amount that can be an addback to the income}
        '@NonRecurringExpenses': {$ref: '#/components/schemas/currencyType', description: Non-recurring
            expense amount that can be an addback to the income}
        OtherAddback:
          description: Other addback that cannot otherwise be captured under a specific
            addback category.
          items: {$ref: '#/components/schemas/OtherAddback'}
          minItems: 0
          type: array
      type: object
    BusinessIncomeRecent:
      additionalProperties: false
      description: Details of the share of the income or income-related amounts in
        the most recent full financial year, attributable to this applicant (year
        = current year -1).
      properties:
        '@EndDate': {$ref: '#/components/schemas/dateType', description: 'The end
            date for the stated income, generally the end of a financial year'}
        '@ProfitBeforeTax': {$ref: '#/components/schemas/currencyType', description: Captures
            the net profit/profit before tax for the specified financial year.}
        '@StartDate': {$ref: '#/components/schemas/dateType', description: 'The start
            date for the stated income, generally the start of a financial year'}
        Addback: {$ref: '#/components/schemas/BusinessIncomeRecentAddback'}
      type: object
    BusinessIncomeRecentAddback:
      additionalProperties: false
      description: Container element for Recent Business Income Addback
      properties:
        '@Depreciation': {$ref: '#/components/schemas/currencyType', description: Depreciation
            amount that can be an addback to the income}
        '@Interest': {$ref: '#/components/schemas/currencyType', description: Interest
            amount that can be an addback to the income}
        '@Lease': {$ref: '#/components/schemas/currencyType', description: Lease amount
            that can be an addback to the income}
        '@NonCashBenefits': {$ref: '#/components/schemas/currencyType', description: Non-cash
            benefits amount that can be an addback to the income}
        '@NonRecurringExpenses': {$ref: '#/components/schemas/currencyType', description: Non-recurring
            expense amount that can be an addback to the income}
        OtherAddback:
          description: Other addback that cannot otherwise be captured under a specific
            addback category.
          items: {$ref: '#/components/schemas/OtherAddback'}
          minItems: 0
          type: array
      type: object
    BusinessIncomeYearToDate:
      additionalProperties: false
      description: Details of the current year to date share of the gross (pre-tax)
        income or income-related amounts, attributable to this applicant.
      properties:
        '@EndDate': {$ref: '#/components/schemas/dateType', description: 'The end
            date for the stated income, generally the end of a financial year'}
        '@ProfitBeforeTax': {$ref: '#/components/schemas/currencyType', description: Captures
            the net profit/profit before tax for the specified financial year.}
        '@StartDate': {$ref: '#/components/schemas/dateType', description: 'The start
            date for the stated income, generally the start of a financial year'}
        Addback: {$ref: '#/components/schemas/BusinessIncomeYearToDateAddback'}
      type: object
    BusinessIncomeYearToDateAddback:
      additionalProperties: false
      description: Container element for Year To Date Business Income Addback
      properties:
        '@Depreciation': {$ref: '#/components/schemas/currencyType', description: Depreciation
            amount that can be an addback to the income}
        '@Interest': {$ref: '#/components/schemas/currencyType', description: Interest
            amount that can be an addback to the income}
        '@Lease': {$ref: '#/components/schemas/currencyType', description: Lease amount
            that can be an addback to the income}
        '@NonCashBenefits': {$ref: '#/components/schemas/currencyType', description: Non-cash
            benefits amount that can be an addback to the income}
        '@NonRecurringExpenses': {$ref: '#/components/schemas/currencyType', description: Non-recurring
            expense amount that can be an addback to the income}
        OtherAddback:
          description: Other addback that cannot otherwise be captured under a specific
            addback category.
          items: {$ref: '#/components/schemas/OtherAddback'}
          minItems: 0
          type: array
      type: object
    DeclaredIncome:
      additionalProperties: false
      description: The amount of income declared by the person applicant for Lo Doc
        applications.
      properties:
        '@IncomeAmount': {$ref: '#/components/schemas/currencyType', description: The
            gross income amount declared by the applicant.}
      type: object
    ExistingCustomer:
      additionalProperties: false
      description: Indicates whether the applicant is an existing customer of the
        lender being applied to.
      properties:
        '@CustomerNumber': {$ref: '#/components/schemas/stringType', description: A
            unique number assigned by the lender used to identify the customer}
      type: object
    MaritalStatusDetails:
      additionalProperties: false
      description: Container for details related to the applicants marital status
      properties:
        '@x_Spouse': {$ref: '#/components/schemas/referenceType', description: 'Link
            to the spouse of this applicant, generally either a co-applicant or a
            Related Party.'}
      type: object
    NextOfKin:
      additionalProperties: false
      description: Contains information about one of the applicant's next of kin.
      properties:
        '@KinRelationship': {$ref: '#/components/schemas/kinRelationshipList', description: The
            relationship the applicant has with the next of kin.}
        '@x_Person': {$ref: '#/components/schemas/referenceType', description: Link
            to the applicant's next of kin}
      type: object
    PowerOfAttorney:
      additionalProperties: false
      description: Container element for details of a power of attorney granted by
        the party
      properties:
        DealingNumber:
          description: The power of attorney (POA) dealing for this person applicant
            including the registered number, book number or state in which the POA
            is in place.
          items: {$ref: '#/components/schemas/dealingNumberType'}
          minItems: 0
          type: array
      type: object
    PreviousName:
      additionalProperties: false
      description: The previous name of the applicant.
      properties:
        '@FirstName': {$ref: '#/components/schemas/stringType', description: A person's
            first name.}
        '@MiddleNames': {$ref: '#/components/schemas/stringType', description: A person's
            other name. Also referred to as their 'middle name'. For example - where
            someone's name is Frederick Joseph Gilbert - 'Joseph' would be considered
            their other name.}
        '@NameTitle': {$ref: '#/components/schemas/nameTitleList', description: The
            name title this person uses when they are formally addressed.}
        '@Surname': {$ref: '#/components/schemas/stringType', description: A person's
            surname.}
      type: object
    Privacy:
      additionalProperties: false
      description: Indicates whether the Party has agreed to allow disclosure and
        contains details of identity and credit checks.
      properties:
        '@AllowCreditCheck': {$ref: '#/components/schemas/yesNoList', description: Indicates
            whether this Party will allow a credit check using their personal details
            as a reference.}
        '@AllowDirectMarketing': {$ref: '#/components/schemas/yesNoList', description: Indicates
            whether this Party will allow their personal details to be used for direct
            marketing purposes.}
        '@AllowThirdPartyDisclosure': {$ref: '#/components/schemas/yesNoList', description: Indicates
            whether this Party will allow their personal details to be disclosed to
            third parties affiliated with this lender.}
      type: object
    ProofOfIdentity:
      additionalProperties: false
      properties:
        '@AustralianStateOfIssue': {$ref: '#/components/schemas/auStateList', description: 'For
            Australian documents, the state of issue'}
        '@DateOfIssue': {$ref: '#/components/schemas/dateType', description: The date
            of issue or start date of the ID}
        '@DocumentNumber': {$ref: '#/components/schemas/stringType', description: The
            identifying number of the document}
        '@DocumentType': {$ref: '#/components/schemas/documentTypeList', description: The
            type of supporting document provided to verify the Party's identity.}
        '@ExpiryDate': {$ref: '#/components/schemas/dateType', description: The end
            date or expiry date of the ID}
        '@MiddleNameOnDocument': {$ref: '#/components/schemas/stringType', description: The
            middle name of the individual as it appears on the form of identification.
            This data is sometimes required for bureau matching and for this reason
            may be captured separately to the full name that appears on the form of
            identification.}
        '@NameOnDocument': {$ref: '#/components/schemas/stringType', description: The
            name of the person for which the document is providing evidence of their
            identity}
        '@OtherDescription': {$ref: '#/components/schemas/stringType', description: Captures
            a brief description of the proof of identity document if Document Type
            = 'Other'}
      type: object
    RealEstateAsset:
      additionalProperties: false
      properties:
        '@ApprovalInPrinciple': {$ref: '#/components/schemas/yesNoList', description: 'Indicates
            that the applicant has not yet identified a specific property for purchase
            but that this property represents a general description of the type of
            property they are looking to purchase, so an approval in principle is
            sought from the lender.'}
        '@PrimaryPurpose': {$ref: '#/components/schemas/primaryPurposeRealEstateAssetList',
          description: Indicates the primary or predominant purpose for which the
            owners hold the property.}
        '@PrimaryUsage': {$ref: '#/components/schemas/primaryUsageList', description: The
            primary usage of the property.}
        '@Status': {$ref: '#/components/schemas/realEstateAssetStatusList', description: Indicates
            the state of any current dwelling on the property}
        '@ToBeSold': {$ref: '#/components/schemas/yesNoList', description: Indicates
            whether the asset will be sold prior to or at settlement}
        '@ToBeUsedAsSecurity': {$ref: '#/components/schemas/yesNoList', description: Indicates
            whether the asset is to be used as security for the new or refinanced
            loan(s)}
        '@Transaction': {$ref: '#/components/schemas/assetTransactionList', description: 'Indicates
            the current status of the applicants'' ownership of the property, or the
            transaction that is proposed by them in relation to the property.'}
        '@UniqueID': {$ref: '#/components/schemas/uniqueIDType', description: System
            assigned unique identifier}
        '@x_Address': {$ref: '#/components/schemas/referenceType', description: Address
            should capture the location details of real estate asset.}
        '@x_PropertyAgent': {$ref: '#/components/schemas/referenceType', description: link
            to the agent managing the property on behalf of the owner.}
        ConstructionDetails: {$ref: '#/components/schemas/ConstructionDetails'}
        ContractDetails: {$ref: '#/components/schemas/ContractDetails'}
        EstimatedValue: {$ref: '#/components/schemas/RealEstateAssetEstimatedValue'}
        Insurance:
          description: Insurance associated with the real estate asset.
          items: {$ref: '#/components/schemas/RealEstateAssetInsurance'}
          minItems: 0
          type: array
        PercentOwned: {$ref: '#/components/schemas/percentOwnedType', description: 'An
            asset may be owned by one or more parties, typically the applicants, so
            there may be more than one owner referenced. An asset may also be partially
            owned by a non-applicant, such as an applicant''s spouse, in which case
            the third party owner may be referenced, or less than 100% ownership of
            the asset may be assigned. If the asset is to be purchased, then this
            indicates the expected ownership arrangement post-settlement. If the percentage
            ownership is not shown, then ownership is assumed to be in equal parts.'}
        PropertyFeatures:
          description: Container for information about the property's features.
          items: {$ref: '#/components/schemas/PropertyFeatures'}
          minItems: 0
          type: array
        RentalIncome:
          description: Information about rental income earned from the property.
          items: {$ref: '#/components/schemas/RentalIncome'}
          minItems: 0
          type: array
        Residential: {$ref: '#/components/schemas/Residential'}
        Rural: {$ref: '#/components/schemas/Rural'}
        Title:
          description: Contains information relating to the title details for the
            real property.
          items: {$ref: '#/components/schemas/Title'}
          minItems: 0
          type: array
        VisitContact: {$ref: '#/components/schemas/VisitContact'}
      type: object
    ConstructionDetails:
      additionalProperties: false
      description: Contains information relating to the construction of a dwelling
        on a security property.
      properties:
        '@BuildPriceAmount': {$ref: '#/components/schemas/currencyType', description: The
            contracted or estimated build price for the dwelling}
        '@BuilderType': {$ref: '#/components/schemas/builderTypeList', description: Indicates
            whether the builder is the owner or a licensed builder.}
        '@FixedPriceContract': {$ref: '#/components/schemas/yesNoList', description: Indicates
            that contract to construct the dwelling is for a fixed price amount.}
        '@SignedContract': {$ref: '#/components/schemas/yesNoList', description: Indicates
            whether the owner of the property is in possession of a signed contract
            for the proposed type of construction}
        '@Type': {$ref: '#/components/schemas/constructionTypeList', description: Indicates
            the type of construction}
        '@x_Builder': {$ref: '#/components/schemas/referenceType', description: Reference
            link to the Builder Contact details and used when Builder Type is not
            "Owner Builder"}
      type: object
    ContractDetails:
      additionalProperties: false
      description: Details of the purchase/sale price as specified in the Contract
        of Sale
      properties:
        '@ArmsLengthTransaction': {$ref: '#/components/schemas/yesNoList', description: Flag
            to indicate whether the transacting parties are arms length parties}
        '@ContractDate': {$ref: '#/components/schemas/dateType', description: The
            date of the Contract of Sale.}
        '@ContractPriceAmount': {$ref: '#/components/schemas/currencyType', description: Captures
            the total purchase/sale price as specified in the Contract of Sale.}
        '@LicencedRealEstateAgentContract': {$ref: '#/components/schemas/yesNoList',
          description: 'Indicates that the Contract of Sale uses a form that has been
            developed for use by real estate agents, as opposed to lawyers and conveyancers.
            Relevant in States where this practice has not been superseded by a standard
            form contract of sale.'}
        '@x_Vendor': {$ref: '#/components/schemas/referenceType', description: Reference
            link to the Settlement Vendor Contact details}
      type: object
    RealEstateAssetEstimatedValue:
      additionalProperties: false
      description: Contains details about the estimated value of the property
      properties:
        '@EstimateBasis': {$ref: '#/components/schemas/estimateBasisRealEstateAssetList',
          description: Indicates whether the estimate was based on the valuation of
            the applicant or a certified valuer.}
        '@Value': {$ref: '#/components/schemas/currencyType', description: The estimated
            value of the real estate.}
      type: object
    RealEstateAssetInsurance:
      additionalProperties: false
      properties:
        '@x_Insurance': {$ref: '#/components/schemas/referenceType', description: Link
            to Insurance details}
      type: object
    PropertyFeatures:
      additionalProperties: false
      properties:
        '@AllPropertyFeatures': {$ref: '#/components/schemas/stringType', description: A
            general description of the features of the property}
        '@FloorArea': {$ref: '#/components/schemas/decimalType', description: 'The
            floor area of the building on the property, in sqm. Where is more than
            one dwelling or structure on the property, then the lender''s policy will
            determine how the applicant is to calculate the floor area. For a residential
            property, generally speaking this is the living area.'}
        '@LandArea': {$ref: '#/components/schemas/decimalType', description: The land
            area of the property. The units of measurement must also be specified
            with this figure.}
        '@LandAreaUnits': {$ref: '#/components/schemas/landAreaUnitsList', description: The
            units of measurement for the stated land area}
        '@NumberOfBathrooms': {$ref: '#/components/schemas/integerType', description: Captures
            the number of bathrooms in the dwelling.}
        '@NumberOfBedrooms': {$ref: '#/components/schemas/integerType', description: Captures
            the number of bedrooms in the dwelling.}
        '@NumberOfFloors': {$ref: '#/components/schemas/integerType', description: The
            number of floors in the property.}
      type: object
    RentalIncome:
      additionalProperties: false
      properties:
        '@EndDate': {$ref: '#/components/schemas/dateType', description: The end date
            of the rental income being earned from the property.}
        '@EvidenceOfTenancy': {$ref: '#/components/schemas/yesNoList', description: 'Indicates
            whether the applicant can provide the lender with evidence that the property
            is tenanted, typically in the form of a lease.'}
        '@Frequency': {$ref: '#/components/schemas/frequencyFullList', description: The
            frequency of rental payments gross amount.}
        '@RentalAmount': {$ref: '#/components/schemas/currencyType', description: 'The
            gross amount of rent that is paid under the lease. The frequency (weekly,
            monthly etc.) for the rental amount specified should also be explicitly
            specified.'}
        '@StartDate': {$ref: '#/components/schemas/dateType', description: The start
            date of the rental income being earned from the property.}
        '@x_Owner': {$ref: '#/components/schemas/referenceType', description: A cross
            reference to the party that owns the rental income.}
      type: object
    Residential:
      additionalProperties: false
      description: Contains information about real estate that is residential.
      properties:
        '@DisplayHome': {$ref: '#/components/schemas/yesNoList', description: The
            dwelling is used as a display home.}
        '@OtherResidentialDetails': {$ref: '#/components/schemas/stringType', description: The
            type of the dwelling if the type is 'Other'.}
        '@Type': {$ref: '#/components/schemas/residentialTypeList', description: 'The
            type of dwelling that exists or is to be located on the residential property.
            For an established or new dwelling, specifies the type of dwelling that
            is currently located on the residential property. For an off-the-plan
            purchase or construction loan, specifies the type of dwelling that will
            be constructed. If the vacant property is notionally residential but without
            an intention to build in the immediate future, then the type would remain
            Vacant Land.'}
      type: object
    Rural:
      additionalProperties: false
      description: Contains information about real estate that is rural.
      properties:
        '@OtherRuralDetails': {$ref: '#/components/schemas/stringType', description: The
            usage of the rural property if the usage is 'Other'.}
        '@Type': {$ref: '#/components/schemas/ruralTypeList', description: The size
            of the rural property should be indicated.}
      type: object
    Title:
      additionalProperties: false
      properties:
        '@Block': {$ref: '#/components/schemas/stringType', description: Block number
            of the land title. Used in ACT.}
        '@County': {$ref: '#/components/schemas/stringType', description: Name of
            the County on the land title.}
        '@District': {$ref: '#/components/schemas/stringType', description: District
            or Division in which the land title is located. Used in ACT.}
        '@Extent': {$ref: '#/components/schemas/stringType', description: Extent of
            the land title. Used in WA.}
        '@Lot': {$ref: '#/components/schemas/stringType', description: Lot identifier
            of the land title.}
        '@Parish': {$ref: '#/components/schemas/stringType', description: Should be
            provided when Title Type = Torrens Title. Name of the Parish on the land
            title.}
        '@Plan': {$ref: '#/components/schemas/stringType', description: A Document
            ID that identifies a Registry Plan within a Land Registry.}
        '@Section': {$ref: '#/components/schemas/stringType', description: Section
            of the land title. Used in ACT.}
        '@TenureType': {$ref: '#/components/schemas/tenureTypeList', description: The
            type of title scheme that the owners derive their tenure or estate from.}
        '@TitleSystem': {$ref: '#/components/schemas/titleSystemList', description: The
            type of title regime that the property is governed by.}
        '@Unit': {$ref: '#/components/schemas/stringType', description: 'Unit of the
            land title. Used in ACT, NT.'}
        '@Volume': {$ref: '#/components/schemas/stringType', description: Should be
            provided when Title Type = "Torrens Title".}
      type: object
    VisitContact:
      additionalProperties: false
      description: Contains details of the party who the lender's valuer should contact
        to arrange an inspection of the property.
      properties:
        '@Details': {$ref: '#/components/schemas/stringType', description: Captures
            information or instructions which are of importance to the lender or valuer
            in arranging access to the property to conduct a valuation inspection.}
        '@Type': {$ref: '#/components/schemas/visitContactTypeList', description: The
            relationship of the valuation contact to the property to be inspected.}
        '@x_ContactParty': {$ref: '#/components/schemas/referenceType', description: The
            party that should be contacted to arrange site visit}
      type: object
    RelatedCompany:
      additionalProperties: false
      properties:
        '@ABN': {$ref: '#/components/schemas/abnPattern', description: The ABN of
            the related company}
        '@ACN': {$ref: '#/components/schemas/acnPattern', description: The ACN of
            the related company}
        '@AFSLNumber': {$ref: '#/components/schemas/stringType', description: The
            Australian Financial Services Licence number of the company.}
        '@BusinessName': {$ref: '#/components/schemas/stringType', description: The
            business name or trading name of the company}
        '@BusinessStructure': {$ref: '#/components/schemas/businessStructureFullList',
          description: Legal structure of this business (only populated where this
            applicant is a Business Enterprise).}
        '@UniqueID': {$ref: '#/components/schemas/uniqueIDType', description: System
            assigned unique identifier}
        Contact: {$ref: '#/components/schemas/RelatedCompanyContact'}
      type: object
    RelatedCompanyContact:
      additionalProperties: false
      description: Container element for the related company contact details
      properties:
        '@x_Address': {$ref: '#/components/schemas/referenceType', description: The
            mailing address of the company.}
        '@x_RegisteredAddress': {$ref: '#/components/schemas/referenceType', description: The
            registered address of the company.}
        ContactPerson: {$ref: '#/components/schemas/ContactPerson'}
        OfficeFax: {$ref: '#/components/schemas/phoneType', description: A fax number
            for the related company}
        OfficeMobile: {$ref: '#/components/schemas/phoneType', description: Mobile
            phone number for the related company.}
        OfficePhone: {$ref: '#/components/schemas/phoneType', description: An office
            phone number for the related company}
        TradingAddress:
          description: The trading addresses of the company.
          items: {$ref: '#/components/schemas/TradingAddress'}
          minItems: 0
          type: array
      type: object
    ContactPerson:
      additionalProperties: false
      description: A primary contact person at the company
      properties:
        '@FirstName': {$ref: '#/components/schemas/stringType', description: A person's
            first name.}
        '@NameTitle': {$ref: '#/components/schemas/nameTitleList', description: The
            name title this person uses when they are formally addressed.}
        '@Surname': {$ref: '#/components/schemas/stringType', description: A person's
            surname.}
      type: object
    TradingAddress:
      additionalProperties: false
      properties:
        '@x_Address': {$ref: '#/components/schemas/referenceType', description: The
            trading address of the company.}
      type: object
    RelatedPerson:
      additionalProperties: false
      properties:
        '@DateOfBirth': {$ref: '#/components/schemas/dateType', description: The related
            person's date of birth.}
        '@UniqueID': {$ref: '#/components/schemas/uniqueIDType', description: System
            assigned unique identifier}
        Contact: {$ref: '#/components/schemas/RelatedPersonContact'}
        PersonName: {$ref: '#/components/schemas/personNameType', description: The
            name of the related person.}
      type: object
    RelatedPersonContact:
      additionalProperties: false
      description: Container element for the related person contact details
      properties:
        '@Email': {$ref: '#/components/schemas/emailPattern', description: An email
            address for the related person}
        '@x_Address': {$ref: '#/components/schemas/referenceType', description: 'The
            residential address details for the party related to the application at
            the time of the application submission, and where this information is
            required by the lender.'}
        '@x_MailingAddress': {$ref: '#/components/schemas/referenceType', description: 'The
            mailing address details for the party related to the application at the
            time of the application submission, and where this information is required
            by the lender'}
        FaxNumber: {$ref: '#/components/schemas/phoneType', description: Fax number
            of the related person.}
        HomePhone: {$ref: '#/components/schemas/phoneType', description: A home phone
            number for the related party.}
        Mobile: {$ref: '#/components/schemas/phoneType', description: A mobile number
            for the related party}
        WorkPhone: {$ref: '#/components/schemas/phoneType', description: A work phone
            number for the related party.}
      type: object
    SalesChannel:
      additionalProperties: false
      description: Captures information about the sales channel through which the
        product is sold to the applicant.
      properties:
        '@Type': {$ref: '#/components/schemas/salesChannelTypeList', description: The
            type of sales channel that is submitting the application.}
        Aggregator: {$ref: '#/components/schemas/Aggregator'}
        Company: {$ref: '#/components/schemas/Company'}
        LoanWriter: {$ref: '#/components/schemas/LoanWriter'}
      type: object
    Aggregator:
      additionalProperties: false
      description: The company that the loan writer aggregates under
      properties:
        '@AccreditationNumber': {$ref: '#/components/schemas/stringType', description: Captures
            a number such as the accreditation number for the aggregator that has
            been assigned by the lender.}
        '@CompanyName': {$ref: '#/components/schemas/stringType', description: Captures
            the legal name of the aggregator}
      type: object
    Company:
      additionalProperties: false
      description: The company or bank branch that the loan writer works at
      properties:
        '@CompanyName': {$ref: '#/components/schemas/stringType', description: The
            name of the broker company or bank branch.}
      type: object
    LoanWriter:
      additionalProperties: false
      description: The loan writer details.
      properties:
        '@FirstName': {$ref: '#/components/schemas/stringType', description: A person's
            first name.}
        '@OtherIdentifier': {$ref: '#/components/schemas/stringType', description: 'Captures
            an alternative identifier by which the loan writer is known, typically
            issued by the originating organisation rather than the lender.'}
        '@Surname': {$ref: '#/components/schemas/stringType', description: A person's
            surname.}
      type: object
    Summary:
      additionalProperties: false
      description: Application summary data.
      properties:
        '@FeesDisclosureDate': {$ref: '#/components/schemas/dateType', description: The
            date that the fees were disclosed to the borrower may be specified}
        Fee:
          description: Contains information about a fee that is payable in connection
            with the loan application.
          items: {$ref: '#/components/schemas/Fee'}
          minItems: 0
          type: array
      type: object
    Fee:
      additionalProperties: false
      properties:
        '@Amount': {$ref: '#/components/schemas/currencyType', description: The estimated
            or approximate amount of the fee.}
        '@CapitaliseFee': {$ref: '#/components/schemas/yesNoList', description: Captures
            whether the fees are to be capitalised against the loan amount}
        '@Description': {$ref: '#/components/schemas/stringType', description: A description
            of the fee type if an accurate description is not specified in the enumerated
            values. Must be provided when Fee Type = "Other"}
        '@PayableTo': {$ref: '#/components/schemas/stringType', description: Captures
            the name of the party that the fee is payable to.}
        '@Type': {$ref: '#/components/schemas/feeTypeList', description: Indicates
            the type of fee being described}
        '@UniqueID': {$ref: '#/components/schemas/uniqueIDType', description: Unique
            Identifier for this Fee Element}
      type: object
    PackageInstructions:
      additionalProperties: false
      description: Determines the scope of the message. The message can be about the
        Application, Valuation, Mortgage Insurance, Loan Documents or an Error.
      properties:
        ApplicationInstructions: {$ref: '#/components/schemas/InstructionsApplicationInstructions'}
        ErrorInstructions:
          description: Error information.
          items: {$ref: '#/components/schemas/InstructionsErrorInstructions'}
          minItems: 1
          type: array
      type: object
    InstructionsApplicationInstructions:
      additionalProperties: false
      description: Submission information or application status updates.
      properties:
        Submit: {$ref: '#/components/schemas/ApplicationInstructionsSubmit'}
        Update: {$ref: '#/components/schemas/ApplicationInstructionsUpdate'}
      type: object
    ApplicationInstructionsSubmit:
      additionalProperties: false
      description: Submission information related to the application process.
      properties:
        '@AssessmentType': {$ref: '#/components/schemas/assessmentTypeApplicationInstructionsList',
          description: Indicates the type of assessment.}
        '@IsAccountVariation': {$ref: '#/components/schemas/yesNoList', description: Flag
            to indicate whether the application being submitted is an account variation.}
        '@IsPricingRequest': {$ref: '#/components/schemas/yesNoList', description: Client
            can submit pricing request to see how much they can borrow and at what
            interest rate.}
        '@IsResubmission': {$ref: '#/components/schemas/yesNoList', description: Flag
            to indicate whether the application being submitted is a resubmission.}
        '@IsSubmissionDocuments': {$ref: '#/components/schemas/yesNoList', description: Indicate
            whether the package contains only submission documents for an already
            submitted application.}
        '@IsSupportingDocuments': {$ref: '#/components/schemas/yesNoList', description: Flag
            to indicate whether the submission only contains supporting documents
            for an already submitted application.}
        Condition:
          description: Information provided in response to a request regarding conditions
            that must be met before the application can be approved.
          items: {$ref: '#/components/schemas/Condition'}
          minItems: 0
          type: array
      type: object
    ApplicationInstructionsUpdate:
      additionalProperties: false
      description: An update on the status of the application or events that have
        occurred in the application workflow.
      properties:
        Event:
          description: An event that has occurred during the application workflow.
          items: {$ref: '#/components/schemas/Event'}
          minItems: 0
          type: array
        Status: {$ref: '#/components/schemas/UpdateStatus'}
      type: object
    UpdateStatus:
      additionalProperties: false
      description: Contains information about the status that the application has
        achieved in the application workflow.
      properties:
        '@DateTime': {$ref: '#/components/schemas/dateTimeType', description: The
            date and time at which the application achieved the status.}
        '@Details': {$ref: '#/components/schemas/stringType', description: 'A free-text
            field for providing details about the Status, such as comments.'}
        '@Name': {$ref: '#/components/schemas/statusNameApplicationInstructionsList',
          description: The status of the loan application.}
        Condition:
          description: Conditions that must be met before the application can be approved.
          items: {$ref: '#/components/schemas/UpdateStatusCondition'}
          minItems: 0
          type: array
        Declined:
          description: The reasons the application has been declined.
          items: {$ref: '#/components/schemas/Declined'}
          minItems: 0
          type: array
        PreApproved:
          description: Application pre approval details.
          items: {$ref: '#/components/schemas/PreApproved'}
          minItems: 0
          type: array
      required: ['@Name']
      type: object
    UpdateStatusCondition:
      additionalProperties: false
      properties:
        '@ConditionOwner': {$ref: '#/components/schemas/conditionOwnerApplicationInstructionsList',
          description: Indicates the party responsible for satisfying the condition.}
        '@ConditionStatus': {$ref: '#/components/schemas/conditionStatusApplicationInstructionsList',
          description: Indicates the current status of the condition.}
        '@ConditionType': {$ref: '#/components/schemas/stringType', description: The
            type of condition.}
        '@CreatedDateTime': {$ref: '#/components/schemas/dateTimeType', description: The
            date and time at which the condition was issued.}
        '@DocRequirement': {$ref: '#/components/schemas/yesNoList', description: Flag
            that indicates whether this condition is satisfied by the provision of
            a document.}
        '@LoanConditionText': {$ref: '#/components/schemas/stringType', description: Detailed
            description of the condition.E.g. "Privacy Consent form signed by each
            individual applicant"}
        '@PreconditionToStage': {$ref: '#/components/schemas/preConditionToStageApplicationInstructionsList',
          description: The condition must be Satisfied or Waived before the application
            can enter this stage.}
        '@UniqueID': {$ref: '#/components/schemas/uniqueIDType', description: System
            assigned unique identifier.}
        '@UpdatedDateTime': {$ref: '#/components/schemas/dateTimeType', description: The
            date and time at which the condition was last updated.}
        '@x_SupportingDocument': {$ref: '#/components/schemas/referenceType', description: The
            unique ID of an attached document that satisfies this condition.}
        Product:
          description: Where a specific financial product (or multiple products, or
            product set) is conditional upon this requirement being met, the link
            to the product, products/s or product set can be captured here.
          items: {$ref: '#/components/schemas/Product'}
          minItems: 0
          type: array
      required: ['@ConditionStatus', '@PreconditionToStage']
      type: object
    InstructionsErrorInstructions:
      additionalProperties: false
      properties:
        '@ErrorSource': {$ref: '#/components/schemas/errorSourceList', description: 'Where
            Error Type is "Data Error", the technology that was used to generate the
            error.'}
        '@ErrorSourceVersion': {$ref: '#/components/schemas/stringType', description: 'Where
            Error Type is "Data Error", the version of the technology identified in
            Error Source that was used to generate the error.'}
        '@Type': {$ref: '#/components/schemas/errorInstructionsTypeList', description: The
            standardised name for the type of error.}
        '@UniqueID': {$ref: '#/components/schemas/uniqueIDType', description: System
            assigned unique identifier.}
        '@XPath': {$ref: '#/components/schemas/stringType', description: 'The position
            in the XML application instance that this message relates to, in the form
            of an XPath expression.'}
        Annotation:
          description: Contains the text of the error message. May occur more than
            once, with message text for each different audience e.g.. layperson, technician.
          items: {$ref: '#/components/schemas/Annotation'}
          minItems: 0
          type: array
      required: ['@Type']
      type: object
    PackageSchemaVersion:
      additionalProperties: false
      description: Contains information about the package schema version
      properties:
        '@LIXICustomVersion': {$ref: '#/components/schemas/SchemaVersionLIXICustomVersion'}
        '@LIXITransactionType': {$ref: '#/components/schemas/LIXITransactionType'}
        '@LIXIVersion': {$ref: '#/components/schemas/LIXIVersion'}
      required: ['@LIXICustomVersion', '@LIXITransactionType', '@LIXIVersion']
      type: object
    absLendingPurposeCodeList:
      description: absLendingPurposeCodeList
      enum: [ABS-121, ABS-123, ABS-125, ABS-127, ABS-129, ABS-131, ABS-133, ABS-143,
        ABS-221, ABS-223, ABS-225, ABS-227, ABS-229, ABS-231, ABS-233, ABS-235, ABS-237,
        ABS-239, ABS-241, ABS-243, ABS-245, ABS-247, ABS-248, ABS-249, ABS-320, ABS-321,
        ABS-322, ABS-323, ABS-324, ABS-326, ABS-327, ABS-329, ABS-330, ABS-331, ABS-332,
        ABS-333, ABS-335, ABS-336, ABS-337, ABS-340, ABS-341, ABS-342, ABS-343, ABS-348,
        ABS-349]
      type: string
    addressType:
      additionalProperties: false
      description: addressType
      properties:
        '@AustralianPostCode': {$ref: '#/components/schemas/auPostCodePattern', description: 'A
            four digit numeric descriptor for a postal delivery area, aligned with
            placename, suburb or locality and in some circumstances a unique Postal
            Delivery Type.'}
        '@AustralianState': {$ref: '#/components/schemas/auStateList', description: The
            defined State or Territory in Australia (in abbreviated format) that the
            specific placename/address is located.}
        '@City': {$ref: '#/components/schemas/stringType', description: 'The name
            of the town, city or island the delivery point is located in or associated
            with. Australian addresses do not have a City as per Australia Post guidelines.
            According to New Zealand Post Address Standards, the Town/City is a mandatory
            element of all addresses, i.e. urban, rural and delivery service addresses.'}
        '@Country': {$ref: '#/components/schemas/countryCodeList', description: The
            destination country of the address}
        '@UniqueID': {$ref: '#/components/schemas/uniqueIDType', description: Unique
            identification assigned to this address.}
        DeliveryPoint: {$ref: '#/components/schemas/DeliveryPoint'}
        NonStandard: {$ref: '#/components/schemas/NonStandard'}
        POBox: {$ref: '#/components/schemas/POBox'}
        Standard: {$ref: '#/components/schemas/Standard'}
      type: object
    DeliveryPoint:
      additionalProperties: false
      description: Details for assisting in more accurately locating and making deliveries
        to the address.
      properties:
        '@Identifier': {$ref: '#/components/schemas/stringType', description: Uniquely
            identifies every delivery point in the Postal Address File (PAF) or equivalent
            in other countries.}
      type: object
    NonStandard:
      additionalProperties: false
      description: The non standard address.
      properties:
        '@Line1': {$ref: '#/components/schemas/stringType', description: Line 1 of
            the address.}
      type: object
    POBox:
      additionalProperties: false
      description: The standard PO Box address.
      properties:
        '@Exchange': {$ref: '#/components/schemas/stringType', description: An exchange
            box in an authorised PO system}
        '@Number': {$ref: '#/components/schemas/stringType', description: 'An identification
            number, forming part of an address, for the channel of postal delivery.'}
        '@Type': {$ref: '#/components/schemas/poBoxTypeList', description: 'The specification
            of the identification of a postal delivery service such as General Post
            Office Box, Community Mail Bag, etc. to clearly distinguish it from another
            when applicable.'}
      type: object
    Standard:
      additionalProperties: false
      description: The standard address.
      properties:
        '@BuildingName': {$ref: '#/components/schemas/stringType', description: 'The
            full name used to identify the physical building or property. Usually
            this information is not abbreviated. Should include any reference to a
            wing or other components of a building complex, if applicable.'}
        '@Level': {$ref: '#/components/schemas/stringType', description: Descriptors
            used to identify the floor or level of a multi-storey building or complex.}
        '@StreetName': {$ref: '#/components/schemas/stringType', description: The
            full street name used to identify the street location of the property.}
        '@StreetNumber': {$ref: '#/components/schemas/stringType', description: To
            record the numeric or numeric/alpha reference number of a house or property.}
        '@StreetType': {$ref: '#/components/schemas/streetTypeList', description: Used
            to identify the thoroughfare type}
        '@Unit': {$ref: '#/components/schemas/stringType', description: 'The specification
            of the type of a separately identifiable portion within a building complex
            or marina with its associated number or identifier to clearly distinguish
            it from another. Can either be depicted by numerals or alpha characters,
            or a mixture of both.'}
      type: object
    anzscoOccupationCodeList:
      description: The list of Occupation Codes defined by the Australian and New
        Zealand Standard Classification of Occupations, 2013, Version 1.2, Released
        at 11:30 AM (CANBERRA TIME) 26/06/2013. This list of classifications (ANZSCO
        Version 1.2) builds on a review conducted in 2009 (ANZSCO First Edition, Revision
        1) following the classification's introduction in 2006.
      enum: ['100000', '111000', '111111', '111200', '111211', '111212', '111300',
        '111311', '111312', '111399', '121000', '121111', '121200', '121211', '121212',
        '121213', '121214', '121215', '121216', '121217', '121218', '121221', '121299',
        '121300', '121311', '121312', '121313', '121314', '121315', '121316', '121317',
        '121318', '121321', '121322', '121399', '121411', '130000', '131100', '131112',
        '131113', '131114', '132000', '132111', '132211', '132311', '132411', '132511',
        '133000', '133100', '133111', '133112', '133211', '133300', '133311', '133312',
        '133411', '133500', '133511', '133512', '133513', '133611', '133612', '134000',
        '134111', '134200', '134211', '134212', '134213', '134214', '134299', '134311',
        '134400', '134411', '134412', '134499', '135100', '135111', '135112', '135199',
        '139000', '139100', '139111', '139112', '139113', '139211', '139900', '139911',
        '139912', '139913', '139914', '139915', '139999', '140000', '141000', '141111',
        '141211', '141311', '141411', '141900', '141911', '141912', '141999', '142100',
        '142111', '142112', '142113', '142114', '142115', '142116', '149000', '149100',
        '149111', '149112', '149113', '149200', '149211', '149212', '149311', '149400',
        '149411', '149412', '149413', '149900', '149911', '149912', '149913', '149914',
        '149915', '149999', '200000', '210000', '211000', '211100', '211111', '211112',
        '211113', '211199', '211200', '211211', '211212', '211213', '211214', '211299',
        '211311', '211400', '211411', '211412', '211413', '211499', '212000', '212100',
        '212111', '212112', '212113', '212114', '212200', '212211', '212212', '212300',
        '212311', '212312', '212313', '212314', '212315', '212316', '212317', '212318',
        '212399', '212400', '212411', '212412', '212413', '212414', '212415', '212416',
        '212499', '220000', '221000', '221100', '221111', '221112', '221113', '221200',
        '221211', '221212', '221213', '221214', '222000', '222100', '222111', '222112',
        '222113', '222199', '222200', '222211', '222212', '222213', '222299', '222300',
        '222311', '222312', '223000', '223100', '223111', '223112', '223113', '223211',
        '223311', '224000', '224100', '224111', '224112', '224113', '224200', '224211',
        '224212', '224213', '224214', '224311', '224400', '224411', '224412', '224500',
        '224511', '224512', '224611', '224700', '224711', '224712', '224900', '224911',
        '224912', '224913', '224914', '224999', '225000', '225100', '225111', '225112',
        '225113', '225200', '225211', '225212', '225213', '225311', '225400', '225411',
        '225412', '225499', '230000', '231000', '231100', '231111', '231112', '231113',
        '231114', '231199', '231200', '231211', '231212', '231213', '231214', '231215',
        '231299', '232000', '232100', '232111', '232112', '232200', '232212', '232213',
        '232214', '232300', '232311', '232312', '232313', '232400', '232411', '232412',
        '232413', '232414', '232511', '232611', '233000', '233100', '233111', '233112',
        '233200', '233211', '233212', '233213', '233214', '233215', '233311', '233411',
        '233500', '233511', '233512', '233513', '233600', '233611', '233612', '233900',
        '233911', '233912', '233913', '233914', '233915', '233916', '233999', '234000',
        '234100', '234111', '234112', '234113', '234200', '234211', '234212', '234213',
        '234300', '234311', '234312', '234313', '234314', '234399', '234400', '234411',
        '234412', '234413', '234500', '234511', '234513', '234514', '234515', '234516',
        '234517', '234518', '234599', '234611', '234711', '234900', '234911', '234912',
        '234913', '234914', '234915', '234999', '240000', '241000', '241111', '241213',
        '241311', '241411', '241500', '241511', '241512', '241513', '241599', '242000',
        '242100', '242111', '242112', '242211', '249000', '249100', '249111', '249112',
        '249200', '249211', '249212', '249213', '249214', '249299', '249311', '250000',
        '251000', '251100', '251111', '251112', '251200', '251211', '251212', '251213',
        '251214', '251300', '251311', '251312', '251400', '251411', '251412', '251500',
        '251511', '251512', '251513', '251900', '251911', '251912', '251999', '252000',
        '252100', '252111', '252112', '252200', '252211', '252212', '252213', '252214',
        '252299', '252300', '252311', '252312', '252411', '252511', '252611', '252700',
        '252711', '252712', '253000', '253100', '253111', '253112', '253211', '253300',
        '253311', '253312', '253313', '253314', '253315', '253316', '253317', '253318',
        '253321', '253322', '253323', '253324', '253399', '253411', '253500', '253511',
        '253512', '253513', '253514', '253515', '253516', '253517', '253518', '253521',
        '253900', '253911', '253912', '253913', '253914', '253915', '253917', '253918',
        '253999', '254000', '254111', '254200', '254211', '254212', '254311', '254400',
        '254411', '254412', '254413', '254414', '254415', '254416', '254417', '254418',
        '254421', '254422', '254423', '254424', '254425', '254499', '260000', '261000',
        '261100', '261111', '261112', '261200', '261211', '261212', '261300', '261311',
        '261312', '261313', '261314', '261399', '262100', '262111', '262112', '262113',
        '263000', '263100', '263111', '263112', '263113', '263200', '263211', '263212',
        '263213', '263299', '263300', '263311', '263312', '270000', '271000', '271111',
        '271200', '271211', '271212', '271213', '271214', '271299', '271311', '272000',
        '272100', '272111', '272112', '272113', '272114', '272115', '272199', '272211',
        '272300', '272311', '272312', '272313', '272314', '272399', '272400', '272411',
        '272412', '272413', '272414', '272499', '272511', '272600', '272611', '272612',
        '272613', '300000', '310000', '311000', '311111', '311200', '311211', '311212',
        '311213', '311214', '311215', '311216', '311299', '311300', '311311', '311312',
        '311313', '311399', '311400', '311411', '311412', '311413', '311414', '311415',
        '311499', '312000', '312100', '312111', '312112', '312113', '312114', '312115',
        '312116', '312199', '312200', '312211', '312212', '312300', '312311', '312312',
        '312400', '312411', '312412', '312500', '312511', '312512', '312611', '312900',
        '312911', '312912', '312913', '312999', '313000', '313100', '313111', '313112',
        '313113', '313199', '313200', '313211', '313212', '313213', '313214', '320000',
        '321000', '321111', '321200', '321211', '321212', '321213', '321214', '322000',
        '322100', '322111', '322112', '322113', '322114', '322115', '322211', '322300',
        '322311', '322312', '322313', '323000', '323100', '323111', '323112', '323113',
        '323200', '323211', '323212', '323213', '323214', '323215', '323299', '323300',
        '323311', '323312', '323313', '323314', '323315', '323316', '323400', '323411',
        '323412', '324000', '324111', '324200', '324211', '324212', '324311', '330000',
        '331000', '331100', '331111', '331112', '331211', '331212', '331213', '332000',
        '332111', '332211', '333000', '333111', '333200', '333211', '333212', '333311',
        '333411', '334100', '334111', '334112', '334113', '334114', '334115', '340000',
        '341100', '341111', '341112', '341113', '342000', '342111', '342200', '342211',
        '342212', '342300', '342311', '342312', '342313', '342314', '342315', '342400',
        '342411', '342412', '342413', '342414', '351000', '351100', '351111', '351112',
        '351211', '351311', '351411', '360000', '361000', '361100', '361111', '361112',
        '361113', '361114', '361115', '361199', '361211', '361311', '362000', '362111',
        '362200', '362211', '362212', '362213', '362311', '362411', '390000', '391111',
        '392000', '392100', '392111', '392112', '392211', '392300', '392311', '392312',
        '393000', '393100', '393111', '393112', '393113', '393114', '393200', '393211',
        '393212', '393213', '393299', '393311', '394000', '394111', '394200', '394211',
        '394212', '394213', '394214', '394299', '399000', '399100', '399111', '399112',
        '399200', '399211', '399212', '399213', '399300', '399311', '399312', '399411',
        '399500', '399511', '399512', '399513', '399514', '399515', '399516', '399517',
        '399599', '399611', '399900', '399911', '399912', '399913', '399914', '399915',
        '399916', '399917', '399918', '399999', '400000', '411000', '411100', '411111',
        '411112', '411200', '411211', '411212', '411213', '411214', '411311', '411400',
        '411411', '411412', '411511', '411611', '411700', '411711', '411712', '411713',
        '411714', '411715', '411716', '420000', '421100', '421111', '421112', '421113',
        '421114', '422100', '422111', '422112', '422115', '422116', '423000', '423111',
        '423211', '423300', '423311', '423312', '423313', '423314', '423400', '423411',
        '423412', '423413', '431000', '431100', '431111', '431112', '431211', '431311',
        '431411', '431511', '431900', '431911', '431912', '431999', '440000', '441000',
        '441111', '441200', '441211', '441212', '441300', '441311', '441312', '442000',
        '442111', '442200', '442211', '442212', '442213', '442214', '442215', '442216',
        '442217', '442299', '450000', '451000', '451111', '451211', '451300', '451311',
        '451399', '451400', '451411', '451412', '451500', '451511', '451512', '451513',
        '451600', '451611', '451612', '451700', '451711', '451799', '451800', '451811',
        '451812', '451813', '451814', '451815', '451816', '451899', '452000', '452111',
        '452200', '452211', '452212', '452213', '452214', '452215', '452216', '452217',
        '452299', '452300', '452311', '452312', '452313', '452314', '452315', '452316',
        '452317', '452318', '452321', '452322', '452323', '452400', '452411', '452412',
        '452413', '452414', '452499', '500000', '510000', '511100', '511111', '511112',
        '512000', '512111', '512200', '512211', '512299', '521000', '521111', '521200',
        '521211', '521212', '530000', '531111', '532100', '532111', '532112', '532113',
        '540000', '541000', '541100', '541111', '541112', '541211', '542100', '542111',
        '542112', '542113', '542114', '550000', '551000', '551100', '551111', '551112',
        '551211', '551311', '552000', '552111', '552211', '552300', '552311', '552312',
        '552313', '552314', '561000', '561100', '561111', '561112', '561113', '561199',
        '561200', '561211', '561212', '561311', '561400', '561411', '561412', '561511',
        '561611', '561900', '561911', '561912', '561913', '561999', '590000', '591000',
        '591100', '591112', '591113', '591115', '591116', '591117', '591200', '591211',
        '591212', '599000', '599100', '599111', '599112', '599200', '599211', '599212',
        '599213', '599214', '599215', '599311', '599411', '599500', '599511', '599512',
        '599513', '599514', '599515', '599516', '599517', '599518', '599521', '599599',
        '599600', '599611', '599612', '599613', '599711', '599900', '599912', '599913',
        '599914', '599915', '599916', '599999', '600000', '610000', '611000', '611100',
        '611111', '611112', '611211', '611300', '611311', '611312', '611313', '611314',
        '611399', '612100', '612111', '612112', '612113', '612114', '612115', '621000',
        '621111', '621211', '621300', '621311', '621312', '621411', '621511', '621611',
        '621700', '621711', '621712', '621713', '621900', '621911', '621912', '621999',
        '630000', '631100', '631111', '631112', '639000', '639100', '639111', '639112',
        '639200', '639211', '639212', '639311', '639400', '639411', '639412', '639511',
        '639911', '700000', '710000', '711000', '711100', '711111', '711112', '711113',
        '711114', '711199', '711211', '711300', '711311', '711313', '711314', '711411',
        '711500', '711511', '711512', '711513', '711514', '711515', '711516', '711599',
        '711611', '711700', '711711', '711712', '711713', '711714', '711715', '711716',
        '711799', '711900', '711911', '711912', '711913', '711914', '711999', '712000',
        '712111', '712200', '712211', '712212', '712213', '712311', '712900', '712911',
        '712912', '712913', '712914', '712915', '712916', '712917', '712918', '712921',
        '712922', '712999', '721000', '721100', '721111', '721112', '721200', '721211',
        '721212', '721213', '721214', '721215', '721216', '721311', '721900', '721911',
        '721912', '721913', '721914', '721915', '721916', '721999', '730000', '731000',
        '731100', '731111', '731112', '731199', '731200', '731211', '731212', '731213',
        '731300', '731311', '731312', '732111', '733100', '733111', '733112', '733113',
        '733114', '733115', '741111', '800000', '811000', '811111', '811211', '811311',
        '811400', '811411', '811412', '811500', '811511', '811512', '811513', '811600',
        '811611', '811612', '811699', '821000', '821100', '821111', '821112', '821113',
        '821114', '821211', '821311', '821400', '821411', '821412', '821511', '821611',
        '821700', '821711', '821712', '821713', '821714', '821900', '821911', '821912',
        '821913', '821914', '821915', '830000', '831000', '831100', '831111', '831112',
        '831113', '831114', '831115', '831116', '831117', '831118', '831199', '831200',
        '831211', '831212', '831300', '831311', '831312', '831313', '832000', '832100',
        '832111', '832112', '832113', '832114', '832115', '832199', '832211', '839000',
        '839111', '839200', '839211', '839212', '839300', '839311', '839312', '839313',
        '839400', '839411', '839412', '839413', '839900', '839911', '839912', '839913',
        '839914', '839915', '839916', '839917', '839918', '839999', '841000', '841111',
        '841200', '841211', '841212', '841213', '841214', '841215', '841216', '841217',
        '841299', '841300', '841311', '841312', '841313', '841400', '841411', '841412',
        '841500', '841511', '841512', '841513', '841514', '841515', '841516', '841517',
        '841599', '841611', '841900', '841911', '841913', '841999', '851000', '851111',
        '851200', '851211', '851299', '851311', '890000', '891000', '891100', '891111',
        '891112', '891113', '891211', '899000', '899111', '899200', '899211', '899212',
        '899311', '899400', '899411', '899412', '899413', '899414', '899415', '899500',
        '899511', '899512', '899611', '899711', '899900', '899911', '899912', '899913',
        '899914', '899915', '899916', '899917', '899918', '899921', '899922', '899923',
        '899999']
      type: string
    applicationDocTypeList:
      description: applicationDocTypeList
      enum: [Full Doc, Lo Doc, No Doc]
      type: string
    applicationTypeList:
      description: applicationTypeList
      enum: [Deposit Account, Facility Drawdown, Lease, Loan, Loan Variation, Overdraft,
        Prequalification, Unsecured]
      type: string
    assetTransactionList:
      description: assetTransactionList
      enum: [Owns, Owns Existing Mortgage, Purchasing, Sold, Transfer]
      type: string
    auDialingCodeList:
      description: auDialingCodeList
      enum: ['02', '03', '04', '05', '07', '08', '13', '1300', '180', '1800']
      type: string
    auStateList:
      description: auStateList
      enum: [ACT, NSW, NT, QLD, SA, TAS, VIC, WA]
      type: string
    builderTypeList:
      description: builderTypeList
      enum: [Licensed Builder, Owner Builder, Unlicensed Builder]
      type: string
    businessStructureFullList:
      description: A list of the types of business structure for an enterprise.
      enum: [Company, Partnership, Sole Trader, Trust]
      type: string
    clearingFromThisLoanList:
      description: clearingFromThisLoanList
      enum: ['No', Partial, 'Yes']
      type: string
    constructionTypeList:
      description: constructionTypeList
      enum: [Full Construction, Home Extension, House Land Package, Minor Non Structural
          Repairs, Renovation]
      type: string
    contributionFundsTypeList:
      description: contributionFundsTypeList
      enum: [Cash, Deposit Paid, Existing Equity, First Home Owner Grant, Genuine
          Savings, Gift, Inheritance, Net Proceeds from Sale of Property, Other, Redraw,
        Sale of Non Real Estate Asset, Secured VISA, Superannuation, Term Deposit,
        Unsecured Borrowing]
      type: string
    countryCodeList:
      description: countryCodeList
      enum: [AD, AE, AF, AG, AI, AL, AM, AO, AQ, AR, AS, AT, AU, AW, AX, AZ, BA, BB,
        BD, BE, BF, BG, BH, BI, BJ, BL, BM, BN, BO, BQ, BR, BS, BT, BV, BW, BY, BZ,
        CA, CC, CD, CF, CG, CH, CI, CK, CL, CM, CN, CO, CR, CU, CV, CW, CX, CY, CZ,
        DE, DJ, DK, DM, DO, DZ, EC, EE, EG, EH, ER, ES, ET, FI, FJ, FK, FM, FO, FR,
        GA, GB, GD, GE, GF, GG, GH, GI, GL, GM, GN, GP, GQ, GR, GS, GT, GU, GW, GY,
        HK, HM, HN, HR, HT, HU, ID, IE, IL, IM, IN, IO, IQ, IR, IS, IT, JE, JM, JO,
        JP, KE, KG, KH, KI, KM, KN, KP, KR, KW, KY, KZ, LA, LB, LC, LI, LK, LR, LS,
        LT, LU, LV, LY, MA, MC, MD, ME, MF, MG, MH, MK, ML, MM, MN, MO, MP, MQ, MR,
        MS, MT, MU, MV, MW, MX, MY, MZ, NA, NC, NE, NF, NG, NI, NL, 'NO', NP, NR,
        NU, NZ, OM, PA, PE, PF, PG, PH, PK, PL, PM, PN, PR, PS, PT, PW, PY, QA, RE,
        RO, RS, RU, RW, SA, SB, SC, SD, SE, SG, SH, SI, SJ, SK, SL, SM, SN, SO, SR,
        SS, ST, SV, SX, SY, SZ, TC, TD, TF, TG, TH, TJ, TK, TL, TM, TN, TO, TR, TT,
        TV, TW, TZ, UA, UG, UM, US, UY, UZ, VA, VC, VE, VG, VI, VN, VU, WF, WS, XK,
        YE, YT, ZA, ZM, ZW]
      type: string
    creditCardTypeList:
      description: creditCardTypeList
      enum: [American Express, Bank Card, Diners Club, MasterCard, Other Credit Card,
        Visa]
      type: string
    creditHistoryIssueList:
      description: creditHistoryIssueList
      enum: [Application for Hardship with Existing Lender, Arrears, Bankruptcy, Default,
        Financial Stress from Current Commitments, Insolvency, Judgement, Legal Proceeding,
        Other, Scheme of Arrangement, Writ]
      type: string
    dealingNumberType:
      additionalProperties: false
      description: dealingNumberType
      properties:
        '@AustralianState': {$ref: '#/components/schemas/auStateList', description: The
            defined State or Territory in Australia (in abbreviated format) that the
            specific Dealing is registered in}
        '@BookNumber': {$ref: '#/components/schemas/stringType', description: Indicates
            the book number associated with the Dealing}
        '@RegisteredNumber': {$ref: '#/components/schemas/stringType', description: Indicates
            the registered number associated with the Dealing}
        '@UniqueID': {$ref: '#/components/schemas/uniqueIDType', description: Unique
            Identifier for this Dealing Number Element}
      type: object
    documentTypeList:
      description: A list of valid document types that can be used to support the
        verification of a person's identity.
      enum: [Australian Birth Certificate, Australian Citizenship Certificate, Australian
          Defence Force Identity Card, Australian Drivers Licence, Australian Passport,
        Australian Photo Firearms Licence, Australian Taxation Office Correspondence
          (with TFN), Bank Statement, Centrelink or Social Security Card, Credit Card,
        Deed Poll, Department of Veterans Affairs Card, Descent Certificate, Electoral
          Roll Acknowledgement, Electricity Bill, Foreign Birth Certificate, Gas Bill,
        Government Benefits Notice, Health Care Card, ImmiCard, International Drivers
          Licence, International Passport, Internet Service Provider Bill, Landline
          Phone Bill, Marriage Certificate, Medicare Card, Motor Vehicle Registration
          or Insurance Papers, National Identity Card, Other, Pension Card, Professional
          or Trade Association Card, Proof of Age Card, Property Insurance Papers,
        Property Lease or Rental Agreement, Rates Notice, State or Federal Government
          Employee Photo Identity Card, Tax Assessment, Tertiary Education Institution
          Photo Identity Card, Verification of Identity Document, Water Utility Bill]
      type: string
    documentationInstructionsMethodList:
      description: documentationInstructionsMethodList
      enum: [Email, eSign, Post]
      type: string
    documentationInstructionsType:
      additionalProperties: false
      description: Instructions on sending documentation to a nominated authority.
      properties:
        '@Method': {$ref: '#/components/schemas/documentationInstructionsMethodList',
          description: The method by which the documentation will be sent to the nominated
            authority.}
        '@SendDocumentsTo': {$ref: '#/components/schemas/sendDocumentsToList', description: The
            type of nominated authority to receive the documentation.}
        '@x_DeliverTo': {$ref: '#/components/schemas/referenceType', description: A
            cross reference to the location for delivery (an Address element).}
        '@x_NominatedAuthority': {$ref: '#/components/schemas/referenceType', description: The
            nominated authority to receive the documentation.}
      type: object
    durationType:
      additionalProperties: false
      description: A complex type used for defining durations in terms of units and
        length of time (as a multiple of the units).
      properties:
        '@Length': {$ref: '#/components/schemas/integerType', description: The length
            of the duration as a multiple of the units.}
        '@Units': {$ref: '#/components/schemas/durationUnitsList', description: The
            units used to define the duration.}
      type: object
    durationUnitsList:
      description: durationUnitsList
      enum: [Days, Months, Weeks, Years]
      type: string
    employerTypeList:
      description: employerTypeList
      enum: [Private, Public]
      type: string
    employmentStatusList:
      description: employmentStatusList
      enum: [Previous, Primary, Secondary]
      type: string
    estimateBasisNonRealEstateAssetList:
      description: estimateBasisNonRealEstateAssetList
      enum: [Applicant Estimate, Certified Valuation]
      type: string
    estimateBasisRealEstateAssetList:
      description: estimateBasisRealEstateAssetList
      enum: [Applicant Estimate, Bank Assessment, Certified Valuation, Contract of
          Sale, Electronic Valuation, Rates Notice, RP Data]
      type: string
    feeTypeList:
      description: feeTypeList
      enum: [Acceptance Fee, Additional Security Fee, Annual Fee, Application Fee,
        Brokerage Fee, Cash Benefit Insurance, Construction Progress Inspection Fee,
        Consumer Credit Insurance, Documentation Fee, Early Repayment Admin Fee, Establishment
          Fee, Extended Warranty Insurance, Guarantee Asset Protection Insurance,
        Inspection Fee, Land Titles Office Final Search Fee, Land Titles Office Search
          Fee, Legal Fee, Line Fee, LMI, Loan Fee, Mortgage Registration, Motor Vehicle
          Insurance, Other, Package Fee, PPSR Fee, Rate Lock Fee, Re-documentation
          Fee, Reduced Equity Fee, Risk Fee, Rollover Fee, Security Guarantee Fee,
        Security Release Fee, Service Plan, Settlement Fee, Stamp Duty on Mortgage,
        Stamp Duty on Transfer of Property, Substitute Security Fee, Switch Fee, Third
          Party Document Production Fee, Title Transfer Fee, Tyre and Rim Insurance,
        Unused Facility Fee, Valuation Fee, Withdrawal of Caveat Fee, Withdrawal of
          Writ Fee]
      type: string
    financialAccountType:
      additionalProperties: false
      description: financialAccountType
      properties:
        '@AccountName': {$ref: '#/components/schemas/stringType', description: The
            free form name assigned to the account.}
        '@AccountNumber': {$ref: '#/components/schemas/stringType', description: The
            unique number assigned to this account. (typically by the financial institution)}
        '@BSB': {$ref: '#/components/schemas/bsbPattern', description: The BSB number
            identifying where this account is held.}
        '@FinancialInstitution': {$ref: '#/components/schemas/financialInstitutionList',
          description: The financial institution where the account is held.}
        '@OtherFIName': {$ref: '#/components/schemas/stringType', description: 'For
            a financial institution not listed, the text name of the FI.'}
      type: object
    financialAssetTypeList:
      description: financialAssetTypeList
      enum: [Cash, Investment, Managed Funds, Other, Pension Account, Receivables,
        Savings Account, Shares and Debentures, Superannuation, Term Deposit, Transaction
          Account, Trust Beneficial Interest]
      type: string
    financialInstitutionList:
      description: financialInstitutionList
      enum: [86 400, AAMI, AAPBS Settlements Services, ABN AMRO, Adelaide Bank, Advantedge,
        AFG Home Loans, Afterpay, AGC, Allianz, Allstate Home Loans, American Express,
        AMG, AMIC, AMIST, AMP, AMS, ANZ Bank, ANZ Wealth, Aon Master Trust, API, Arab
          Bank of Australia, Armidale Building Society, Asahi Bank, Athena Home Loans,
        Aussie Home Loans, Aussie Mastercard, Aussie Mortgage Ltd, Aust Alliance,
        Australia Central Credit Union, Australian Catholic, Australian Defence Credit
          Union, Australian Eagle, Australian Ethical, Australian Financial Holdings
          Pty Ltd, Australian First Mortgage, Australian Military Bank Ltd, Australian
          Pensioners Insurance, Australian Unity Building Society, AustralianSuper,
        AustSafe, Auswide Bank, AV Super, AVCO, AXA, Bank Australia, Bank of America,
        Bank of China, Bank of Communications Co Ltd, Bank of Heritage Isle, Bank
          of Melbourne, Bank of Queensland, Bank of Sydney Ltd, Bank of Tokyo-Mitsubishi,
        Bank SA, Bankers Trust Australia, Bankwest, Banque Nationale De Paris, Barclays,
        Barnes Home Loans, Bass and Equitable Building Society, BC Securities Pty
          Ltd, Bendigo Bank, Better Choice, Better Mortgage Corporation, Better Mortgage
          Mgmt, Beyond Bank Australia, Bluebay Home Loans, Bluestone, BMW Australia,
        BOQ, Brighten Home Loans, Broken Hill Community Credit Union, Building Society
          MP, BUSSQ, Buyers Edge, Capital Finance, Capricornia Credit Union, CareSuper,
        Cash Doctors, Catholic Church, Catholic Super, CBA, CBFC, CBUS, Certegy, CGU,
        Challenge Bank, Chase Manhattan Bank, Chequecash Pty Ltd, ChoiceLend, Christian
          Super, CHU, CIC, CIL, Circle Credit Union, CIT Credit Pty, Citibank, City
          Coast Credit Union, Citywide Home Loans, Club Plus Super, Co Operative Ins
          Co, Coastline Credit Union, Colonial, Colonial First State, Colonial Mutual,
        Columbus Capital Pty Ltd, CommBank Financial Planner, Commercial Union, CommInsure,
        Commonwealth Bank, Community First Credit Union Limited, Connective Home Loans,
        CPS Credit Union, Credit Corp, Credit Union Australia, Credit Union Financial
          Services, Credit Union SA, Credit Union Settlement Services, CUA, Cumis,
        Cuscal, Custom Credit, Dai-Ichi Kango Bank, Daimlerchrysler Finance, Debt
          Purchase Australia, Defence Bank, Defence Credit, Defence Force Credit Union
          Limited, Defence Services Homes, Delphi Bank, Deutsche Bank, Diners Club,
        Dnister Ukrainian Credit Co-operative, EECU, EISS, ELCOM Credit Union, Elders,
        EMoney Pty Ltd, Energy Super, Equity Super, Esanda, Essential Super, Ezy Bank,
        FAI, Faraday West and Co Pty Ltd, FASTLend, Federation, FinancePath, Fire
          Brigades Credit Union, Fire Service Credit Union, First Choice Credit Union,
        First National Bank of Chicago, First Permanent Home Loans, First Provincial
          Building Society, First State Super, First Super, Firstmac, Flexirent, Ford
          Credit, Fortis, Fundcorp, Funding, Future Financial, G and C Mutual Bank
          Limited, Gateway Credit Union, GE Automotive, GE Capital Finance, GE Capital
          Finance (Go Mastercard), GE Credit Line, Ge Finance, GE Money Aust Pty Ltd,
        GE Mortgages, Genworth, GIO, GIO Building Society, GMAC Finance, Grace Bros,
        GRE, Great Pacific Financial, Greater Building Society, Guild, Hanover Consumer
          Finance, HBF, Heritage, HESTA, Home Building Society, Homeloans Ltd, Homeside,
        Homestar Finance Pty Ltd, Homestart Finance, Homeswest, HSBC, Hume Building
          Society, IBJ Australia Bank, Iden, Ignite, Illawarra Building Society, IMB
          Ltd, INC Invest, Infinity Group Finance Pty Ltd, ING, ING Mercantile Mutual
          Bank, Intech Credit Union, International Acceptance, International Commercial
          Bank of China, InTrust, Investec, IOOF Building Society, Keystart Home Loans,
        Kinetic, Kwik Kash International, LaTrobe, Legal Super, Liberty, Lion Finance,
        Loanave, Loans Com Au Pty Ltd, Local Government, Lombard Finance, LUCRF, M
          Capitol, Macarthur Credit Union, Mackay Permanent Building Society, Macquarie,
        Maitland Mutual Building Society, Manufacture Mutual, MAP, ME Bank, Media
          Super, Mediplan Australia, Members Equity Bank, Mercantile Mutual, Mercer
          Wealth, Midland Bank PLC, MIIP, Mine Wealth and Wellbeing, MIS, Mitchell
          Building Society, Mizuho Bank Ltd, MKM Capital, MLC, MMI, Money Quest Australia
          Pty Ltd, Morgan Guaranty Trust Bank of New York, Mortgage Ezy, Mortgage
          House, Mortgage Mart, MOVE Bank, MTAA, Mutual Community, MyState Bank Limited,
        NAB, National Mortgage Corporation, Natwest Markets Australia, NCUIS, Newcastle
          Permanent Building Society, NGS, Northern Building Society, NRMA, NSF Super,
        NSW Home Loans, NSW Teachers Credit Union, NZI, OneAnswer, ORDE Financial
          Pty Ltd, Origin Mortgage Management Services Pty Ltd, ORIX, Other, Overseas-Chinese
          Banking Corporation, Paramount, Payday Central, Pensioners Insurance, People's
          Choice Credit Union, Pepper, Perpetual Limited, Perpetual Trustee, Pioneer
          Permanent Building Society, PLANLend, Plum, Police and Nurses, Police Bank
          Ltd, Police Credit Union, Police Credit Union (NSW), Powerstate Credit Union,
        Primary Industry Bank of Australia, Prime, Prime Mortgage Group Ltd, Prospect
          Credit Union, Public Trustee, Pulse Credit Union, QANTAS Credit Union, QBE,
        Qudos Bank, Queensland Country Credit Union, Queensland Credit Union, Queensland
          Industry Development Corp, Queensland Professional Credit Union, Queensland
          Teachers Credit Union, Rabobank Nederland, RAC, RAC WA, RACV, Radio Rentals,
        Railways Credit Union, RAMS, Rate Money Pty Ltd, REA Home Loans, RedZed, Repcol,
        Reserve Bank of Australia, Resi, RESI Mortgage Corporation, RESIMAC, Royal
          Life, Russell Investments, Safrock Finance, Sanwa Australia Finance Limited,
        Savings And Loans Credit Union, SGIC, SGIO, Shannons, SmartSave, Southern
          Cross Credit Union, Sovereign Credit, St Andrew, St George, Standard Chartered
          Bank Aust, State Street Bank And Trust Company, Statewide, Stronghold, Sumitomo
          Mitsui Banking Coporation, Summerland Credit Union, Sun Alliance, Suncorp,
        Suncorp Metway, Sunsuper, Swann, Taiwan Business Bank Ltd, TasPlan, Teachers
          Credit Union, Teachers Mutual, Territory Mutual Building Society, The Rock,
        Think Tank Group Pty Ltd, Tictoc Online, Tonto Home Loans, Town And Country
          Bank, Toyota Finance Australia, Trust Bank of Tasmania, TWUSUPER, UBank,
        United Credit Union, United Overseas Bank, University Credit Society, VACC,
        Vero, VicSuper, Victoria Teachers Credit Union Ltd, Virgin Super, Visions,
        Well Nigh Capital Funding No 1 Pty Ltd, Western QBE, Westfarmers, Westpac
          Bank, Westpack Insurance Services, Wide Bay Capricorn Building Society,
        Wizard, WLTH Pty Ltd, World Marine and General, Your Manager, Zip Co, Zurich]
      type: string
    frequencyFullList:
      description: frequencyFullList
      enum: [Daily, Fortnightly, Half Yearly, Monthly, One Off, Quarterly, Seasonal,
        Weekly, Yearly]
      type: string
    frequencyShortList:
      description: frequencyShortList
      enum: [Fortnightly, Monthly, Weekly, Yearly]
      type: string
    governmentBenefitsTypeList:
      description: governmentBenefitsTypeList
      enum: [Abstudy, Age Pension, Austudy, Carer Payment, Child Support, Crisis Payment,
        Disability Support Pension, Family Allowance, Mobility Allowance, Other, Parenting
          Payment, Widows Allowance, Youth Allowance]
      type: string
    housingStatusList:
      description: housingStatusList
      enum: [Boarding, Caravan, Other, Own Home, Own Home Mortgage, Renting, Supplied
          by Employer, With Parents]
      type: string
    insuranceTypeList:
      description: insuranceTypeList
      enum: [Body Corporate, Building Insurance, Building Replacement, Consumer Credit
          Insurance, Disablement, Home Contents Insurance, Income Protection, Involuntary
          Unemployment, Life Insurance, LMI, Other, Trauma]
      type: string
    insurerList:
      description: insurerList
      enum: [AAMI, AIA Australia, Allianz Australia, AMP Limited, API, APIA, Asteron
          Life (Suncorp), Atradius, Australian Pensioners Insurance, Australian Unity,
        Auto and General Insurance, AXA Australia, Bingle, BUPA Australia, Buzz, Calliden
          Insurance, CGU Insurance, CHU, Chubb, CIC, CIL, Colonial, CommInsure, Commonwealth
          Bank, Defence Services Homes, Elders, Esanda, FAI, Fortis, Genworth Financial,
        GIO, Guardian Insurance, Guild, HBF, ING, Insurance Australia Group, InsureMyRide,
        Just Car, LFI Group Pty Ltd, Lifebroker, Macquarie Life, Manchester Unity
          Australia, Medibank Private, Mercantile Mutual, MLC, MMI, Mutual Community,
        NCUIS, NIB Health Funds, NRMA Insurance, NZI, OnePath (ANZ), Other, Q Report
          Jewellery Insurance, QBE, QBE Insurance - MemberCare, RAC, RAC WA, RACQ
          Insurance, RACV, Real Insurance, Redwood Advisory, SGIC, SGIO, Shannons,
        Smart Business Insurance Pty Ltd., Sun Alliance, Suncorp, Super Cheap Auto
          Group, Superannuation Warehouse, Swann, TAL (Tower Australia), Terri Scheer,
        TIO, TradeCover, VACC, Vero, Western QBE, Westfarmers, Westpac Insurance Services,
        World Marine and General, You.insured, Zurich Australia]
      type: string
    interestChargeFrequencyList:
      description: interestChargeFrequencyList
      enum: [Daily, Every Two Months, Fortnightly, Half Yearly, Monthly, Quarterly,
        Weekly, Yearly]
      type: string
    interestOnlyReasonList:
      description: Where the credit application includes an interest only period,
        this list contains options that can be used to prompt the applicant for reasons
        (with an option of 'other').
      enum: [Create funds for investment purposes, Large non-recurring expenses, Maximise
          cash flow, Minimise Cash Flow Impact During Construction, Minimise Cash
          Flow Impact During the Bridging Period, Other reason, Plan to convert to
          investment property, Principal reductions in an offset facility, Recommendation
          From Independent Financial Adviser, 'Taxation, financial or accounting reasons',
        Temporary reduction in income, Variable income]
      type: string
    interestTypeList:
      description: interestTypeList
      enum: [Fixed Rate, Variable]
      type: string
    kinRelationshipList:
      description: kinRelationshipList
      enum: [Child, Friend, Grandparent, Other Relative, Parent, Sibling, Spouse]
      type: string
    landAreaUnitsList:
      description: landAreaUnitsList
      enum: [Acres, Hectares, Square Metres]
      type: string
    liabilityTypeList:
      description: liabilityTypeList
      enum: [Amortising Home Loan, Bridging Finance, Car Loan, Commercial Bill, Contingent
          Liability, Credit Card, HECS-HELP, Hire Purchase, Invoice Financing Loan,
        Lease, Line of Credit, Line of Credit Home Loan, Loan as Guarantor, Margin
          Loan, Mortgage Loan, Other, Other Loan, Outstanding Taxation, Overdraft,
        Personal Loan, Store Card, Term Loan, Trade Finance Loan]
      type: string
    livingExpenseCategoryList:
      description: List of living expense categories, as agreed by the Living Expenses
        Working Group.
      enum: ['Body Corporate Fees, Strata Fees and Land Tax on Owner Occupied Principal
          Place of Residence', Childcare, Clothing and personal care, Education, General
          Basic Insurances, Groceries, Health Insurance, 'Higher Education, Vocational
          Training and Professional Fees', Insurance, Investment Property Running
          Costs, 'Investment property utilities, rates and related costs', Medical
          and health, Other, 'Owner occupied property utilities, rates and related
          costs', Pet Care, Primary Residence Running Costs, Private Schooling and
          Tuition, Public or Government Primary and Secondary Education, Recreation
          and entertainment, Secondary Residence Running Costs, 'Sickness and Personal
          Accident Insurance, Life Insurance', 'Telephone, internet, pay TV and media
          streaming subscriptions', Transport]
      type: string
    loanTermUnitsList:
      description: loanTermUnitsList
      enum: [Days, Months, Weeks, Years]
      type: string
    loanTypeList:
      description: A list of credit facility types that are valid for those facilities
        described in the 'LoanDetails' element.
      enum: [Amortising Home Loan, Bridging Finance, Chattel Mortgage, Commercial
          Bill, Commercial Hire Purchase, Credit Card, Finance Lease, Invoice Financing
          Loan, Lease, Line of Credit, Line of Credit Home Loan, Margin Loan, Mortgage
          Loan, Operating Lease, Other Loan, Overdraft, Personal Loan, Reverse Mortgage,
        Term Loan, Trade Finance Loan]
      type: string
    maritalStatusList:
      description: maritalStatusList
      enum: [De Facto, Divorced, Married, Separated, Single, Unknown, Widowed]
      type: string
    nonRealEstateAssetTypeList:
      description: nonRealEstateAssetTypeList
      enum: [Agricultural, Aircraft, Business, Cleaning, 'Earth Moving, Mining and
          Construction', Financial Asset, Hospitality and Leisure, IT and AV Equipment,
        Materials Handling and Lifting, Medical, Mobile Computing, Motor Vehicle and
          Transport, Office Equipment, Other, 'Plant, Equipment and Industrial', Tools
          of Trade, Watercraft]
      type: string
    otherAssetTypeList:
      description: otherAssetTypeList
      enum: [Art Works, Good Will of Business, Home Contents, Intellectual Property,
        Other, Stock and Inventory]
      type: string
    otherCommitmentCategoryList:
      description: Category of the other commitment.
      enum: [Board, Child and Spousal Maintenance, Child Maintenance, Other, Rent]
      type: string
    otherIncomeTypeList:
      description: otherIncomeTypeList
      enum: [Annuities, Child Maintenance, Dividends, Foreign Sourced, Government
          Benefits, Interest Income, Managed Investment, Other Income, Private Pension,
        Salary Sacrifice Contribution, Super Concessional Contribution, Super Excess
          Concessional Contribution, Super Non Concessional Contribution, Superannuation,
        Workers Compensation]
      type: string
    paygBasisList:
      description: paygBasisList
      enum: [Casual, Commission Only, Contract, Full Time, Part Time, Seasonal, Temporary]
      type: string
    paymentTypeList:
      description: paymentTypeList
      enum: [Interest Capitalised, Interest Only, Interest Partially Capitalised,
        Prepaid Interest, Principal and Interest, Principal Interest Fees]
      type: string
    percentOwnedType:
      additionalProperties: false
      description: percentOwnedType
      properties:
        Owner:
          description: Container that associates a reference to an owner or other
            responsible party with the percentage of the item that they own or are
            responsible for.
          items: {$ref: '#/components/schemas/percentOwnedTypeOwner'}
          minItems: 0
          type: array
      type: object
    percentOwnedTypeOwner:
      additionalProperties: false
      properties:
        '@Percent': {$ref: '#/components/schemas/percentType', description: Captures
            the percentage of the item that referenced party owns or is responsible
            for.}
        '@x_Party': {$ref: '#/components/schemas/referenceType', description: 'Contains
            a reference to a party that is an owner of the item, or has a similar
            relationship such as a borrower or beneficiary.'}
      type: object
    phoneType:
      additionalProperties: false
      description: phoneType
      properties:
        '@AustralianDialingCode': {$ref: '#/components/schemas/auDialingCodeList',
          description: 'The Dialing Code prefix for an Australian STD landline phone
            number. For example, if the applicant lives in Sydney, the Area Code is
            02. If the applicant lives in Melbourne, the Area Code is 03.'}
        '@CountryCode': {$ref: '#/components/schemas/stringType', description: 'Captures
            the international dialing code for the country in which the fixed phone
            number is located, e.g. "61" for Australia. Maximum length is 3 digits.'}
        '@Number': {$ref: '#/components/schemas/stringType', description: 'The local-dial
            number. For local rate, free call, satellite or similar special non-overseas
            numbers where the area or dialing code is not otherwise available, the
            full phone number. Required, allowed once only.'}
        '@OverseasDialingCode': {$ref: '#/components/schemas/stringType', description: The
            Dialing Code prefix for an overseas phone number}
      type: object
    poBoxTypeList:
      description: poBoxTypeList
      enum: [Care of Post Office, Community Mail Agent, Community Mail Bag, Community
          Postal Agent, Freepost, GPO Box, Locked Bag, Mail Bag, Mail Service, PO
          Box, Postal Mail Bag, Poste Restante, Private Bag, Roadside Delivery, Roadside
          Mail Bag, Roadside Mail Box, Roadside Mail Service, Rural Mail Bag]
      type: string
    preferredContactPersonList:
      description: A list of methods to contact a person.
      enum: [Email, Home Phone, Mobile, Work Phone]
      type: string
    primaryPurposeLoanPurposeList:
      description: primaryPurposeLoanPurposeList
      enum: [Business, Investment Non Residential, Investment Residential, Owner Occupied,
        Personal]
      type: string
    primaryPurposeRealEstateAssetList:
      description: primaryPurposeRealEstateAssetList
      enum: [Business, Investment, Owner Occupied]
      type: string
    primaryUsageList:
      description: primaryUsageList
      enum: [Commercial, Industrial, Residential, Rural]
      type: string
    proportionsList:
      description: proportionsList
      enum: [Equal, Not Specified, Specified]
      type: string
    realEstateAssetStatusList:
      description: realEstateAssetStatusList
      enum: [Established, New Building, Off the Plan, Vacant Land]
      type: string
    repaymentFrequencyList:
      description: repaymentFrequencyList
      enum: [Daily, Fortnightly, Half Yearly, Monthly, One Off, Quarterly, Seasonal,
        Weekly, Yearly]
      type: string
    residencyStatusList:
      description: residencyStatusList
      enum: [Non Resident, Permanently in Australia, Temporarily in Australia]
      type: string
    residentialTypeList:
      description: residentialTypeList
      enum: [Aged Care Unit, Apartment Unit Flat, Bedsitter Bachelor, Company Title
          Unit, Converted Commercial Property, Converted Industrial Property, Converted
          Motel Units, Display House, Duplex, Fully Detached House, High Density Apartment,
        Holiday Home, Holiday Rental, Improved Land, Kit Home, Low Density Apartment,
        Luxury House, Luxury Other, Medium Density Apartment, Multi Dwelling, Other,
        Property Development, Relocatable Home, Resort Unit, Semi Detached House,
        Serviced Apartment, Strata Hotel Unit, Strata Title Unit, Studio Warehouse
          Apartment, Terrace, Townhouse, Unit Student Accommodation, Vacant Land,
        Villa]
      type: string
    ruralTypeList:
      description: ruralTypeList
      enum: [8 Hectares or Less, Over 40 Hectares, Over 8 Less than 40 Hectares]
      type: string
    sendDocumentsToList:
      description: sendDocumentsToList
      enum: [Accountant, All, Applicant, Branch, Loan Writer, Other, Solicitor]
      type: string
    streetTypeList:
      description: streetTypeList
      enum: [Access, Alley, Alleyway, Amble, Anchorage, Approach, Arcade, Arterial,
        Artery, Avenue, Banan, Bank, Basin, Bay, Beach, Bend, Block, Boardwalk, Boulevard,
        Boulevarde, Bowl, Brace, Brae, Break, Bridge, Broadway, Brow, Bypass, Byway,
        Canal, Causeway, Centre, Centreway, Chase, Circle, Circlet, Circuit, Circus,
        Close, Cluster, Colonnade, Common, Concourse, Connection, Copse, Corner, Corso,
        Course, Court, Courtyard, Cove, Crescent, Crest, Cross, Crossing, Crossroad,
        Crossway, Cruiseway, Cul-De-Sac, Cutting, Dale, Dell, Dene, Deviation, Dip,
        Distributor, Divide, Dock, Domain, Downs, Drive, Driveway, Edge, Elbow, End,
        Entrance, Esplanade, Estate, Estuary, Expressway, Extension, Fairway, Fire
          Track, Firebreak, Fireline, Firetrack, Firetrail, Flat, Follow, Footway,
        Ford, Foreshore, Formation, Freeway, Front, Frontage, Gap, Garden, Gardens,
        Gate, Gates, Gateway, Glade, Glen, Grange, Green, Ground, Grove, Gully, Harbour,
        Heath, Heights, Highroad, Highway, Hill, Hollow, Hub, Interchange, Intersection,
        Junction, Key, Keys, Landing, Lane, Laneway, Lees, Line, Link, Little, Lookout,
        Loop, Lower, Mall, Manor, Mead, Meander, Mears, Mew, Mews, Mile, Motorway,
        Mount, Nook, Outlet, Outlook, Parade, Park, Parklands, Parkway, Part, Pass,
        Passage, Path, Pathway, Piazza, Pier, Place, Plateau, Plaza, Pocket, Point,
        Port, Portal, Promenade, Pursuit, Quad, Quadrangle, Quadrant, Quay, Quays,
        Ramble, Ramp, Range, Reach, Reserve, Rest, Retreat, Return, Ride, Ridge, Ridgeway,
        Right Of Way, Ring, Rise, Rising, River, Riverway, Riviera, Road, Roads, Roadside,
        Roadway, Ronde, Rosebowl, Rotary, Round, Route, Row, Rue, Run, Service Way,
        Shunt, Siding, Slope, Sound, Spur, Square, Stairs, State Highway, Steps, Strand,
        Street, Streets, Strip, Subway, Tarn, Tarnice Way, Terrace, Thoroughfare,
        Throughway, Tollway, Top, Tor, Towers, Track, Trail, Trailer, Tramway, Triangle,
        Trunkway, Turn, Twist, Underpass, Upper, Vale, Valley, Viaduct, View, Village,
        Villas, Vista, Wade, Walk, Walkway, Waterway, Way, Wharf, Woods, Wynd, Yard]
      type: string
    tenureTypeList:
      description: tenureTypeList
      enum: [Community Title, Company Title, Crown Land, Crown Lease, Freehold, Group
          Titles Plan, Leasehold, Moiety Title, None, Other Title, Purple Title, Strata
          Title, Stratum Title, Survey Strata Title, Unit Title]
      type: string
    titleSystemList:
      description: titleSystemList
      enum: [Company, Old Law, Qualified, Torrens, Unregistered]
      type: string
    totalTermTypeList:
      description: totalTermTypeList
      enum: [Amortisation Term, Total Term]
      type: string
    variationTypeList:
      description: variationTypeList
      enum: [Add Borrower, Add Guarantee, Add Guarantee Security, Add Guarantor, Add
          Security, Balance Increase, Change Authority to Operate, Change Loan Term,
        Change Repayment Account, Change Repayment Amount, Change Repayment Date,
        Change Repayment Frequency, Change Repayment Type, Close Account, Interest
          Rate Discount, Lending Guarantee Limit Decrease, Lending Guarantee Limit
          Increase, Limit Increase, Reduce Balance, Reduce Limit, Release Guarantee,
        Release Guarantee Security, Release Guarantor, Release Security, Remove Borrower,
        Split Account, Substitute Guarantee Security, Substitute Security, Switch
          Product, Update Party Details]
      type: string
    vehicleTypeList:
      description: vehicleTypeList
      enum: [Bicycle, Bodies, Bus Coach or Special Purpose, Car, Caravan, Light Commercial,
        Locomotive, Motorcycle, Other, Rail Cars, Trailer, Truck, Watercraft]
      type: string
    visitContactTypeList:
      description: visitContactTypeList
      enum: [Applicant, Builder, Property Agent, Tenant, Vendor]
      type: string
  securitySchemes:
    clientSecret:
      type: APIKEY
      description: ''
      name: X-IBM-Client-Secret
      in: HEADER
      extensions: {}
    clientId:
      type: APIKEY
      description: ''
      name: X-IBM-Client-Id
      in: HEADER
      extensions: {}
extensions:
  x-ibm-configuration:
    testable: false
    enforced: true
    cors: {enabled: false}
    assembly:
      execute:
      - set-variable:
          title: Add security header
          actions:
          - {value: $(apic-secret), set: message.headers.x-apic-secret}
      - gatewayscript:
          title: gatewayscript
          version: 1.0.0
          source: |-
            const serviceVars = require("service-metadata");
            var path = apim.getvariable('request.path');
            var basePath = apim.getvariable('api.root');
            var relativepath = path.substr(basePath.length + 1);
            apim.setvariable('relativepath', relativepath, 'add');
            apim.setvariable('message.headers.x-api-client-app-name', apim.getvariable('client.app.name'));
            apim.setvariable('message.headers.x-api-transaction-id', serviceVars.transactionId);
      - proxy: {target-url: $(runtime-url)$(relativepath)$(request.search), compression: false,
          cache-response: no-cache}
    properties:
      runtime-url: {value: '@RUNTIME_URL@', description: '', encoded: false}
      apic-secret: {value: '@API_SECRET@', description: '', encoded: false}
    gateway: datapower-gateway
  x-original-swagger-version: '2.0'
